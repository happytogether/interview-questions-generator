[
  {
    "title": "Explain What is Closure in Javascript?",
    "answer": "A closure is the combination of a function and the lexical environment within which that function was declared. i.e, It is an inner function that has access to the outer or enclosing functionâ€™s variables. The closure has three scope chains. <p class='my-10'>Own scope where variables defined between its curly brackets Outer functionâ€™s variables Global variables Let's take an example of closure concept</p>",
    "example": "function Welcome(name){\n var greetingInfo = function(message){ \n  console.log(message+' '+name);\n }\n return greetingInfo;\n}\nvar myFunction = Welcome('John');\nmyFunction('Welcome '); //Output: Welcome John\nmyFunction('Hello Mr.'); //output: Hello Mr.John"
  },
  {
    "title": "What is scope in javascript?",
    "answer": "Scope is the accessibility of variables, functions, and objects in some particular part of your code during runtime. In other words, scope determines the visibility of variables and other resources in areas of your code."
  },
  {
    "title": "What are modules?",
    "answer": "<p>Modules refer to small units of independent, reusable code and also act as the foundation of many JavaScript design patterns. Most of the JavaScript modules export an object literal, a function, or a constructor</p>"
  },

  {
    "title": "What is a callback hell?",
    "answer": "<p class='my-10'>Callback Hell is an anti-pattern with multiple nested callbacks which makes code hard to read and debug when dealing with asynchronous logic. The callback hell looks like below,</p>",
    "example": "async1(function(){\n async2(function(){\n  async3(function(){\n   async4(function(){\n    ....\n   });\n  });\n })\n});"
  },
  {
    "title": "console.log('ðŸ™‚' === 'ðŸ™‚');",
    "answer": "<p class='my-10'>True, Emojis are unicodes and the unicode for smile symbol is 'U+1F642'. The unicode comparision of same emojies is equivalent to string comparison. Hence, the output is always true.</p>"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  },
  {
    "title": "What is Closure?"
  }
]
