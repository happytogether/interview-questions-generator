{"version":3,"sources":["context/mouse-context.js","components/Reward/Emoji.js","components/Reward/Reward.js","hooks/useMousePosition.js","components/shapes/Smile.js","components/shapes/Sad.js","components/DotRing/DotRing.js","components/shapes/Sun2.js","components/Reward/MemphisSets.js","components/shapes/Wave.js","components/shapes/Wave2.js","components/shapes/Square.js","getRandomFromInterval.js","components/shapes/Moon.js","components/shapes/Sun.js","components/shapes/Sun3.js","components/Logo.js","components/HomeHead.js","components/shapes/Arrow.js","components/shapes/FlickHand.js","hooks/useCookie.js","getRandomDifferent.js","pages/RewardAnswers.js","components/shapes/Restart.js","pages/GradeASet.js","pages/GradeA.js","pages/GradeFSet.js","pages/GradeF.js","pages/QuestionsDone.js","pages/QuestionsNotDone.js","pages/SmileSadFace.js","components/DotRing/MouseLeftRight.js","pages/Questions.js","components/shapes/Rect.js","RandomBg.js","components/Items.js","components/Footer.js","Home.js","Report.js","Credit.js","pages/QuestionsMock.js","App.js","reportWebVitals.js","index.js"],"names":["MouseContext","createContext","cursorType","cursorChangeHandler","MouseContextProvider","props","useState","setCursorType","Provider","value","children","PI","Math","defaultEmoji","createElements","root","elementCount","elementSize","zIndex","emoji","Array","from","length","map","_","index","element","document","createElement","emojiIcon","floor","random","innerHTML","style","fontSize","position","width","appendChild","radiansFrom","degrees","generatePhysics","angle","spread","startVelocity","radAngle","radSpread","x","y","wobble","velocity","angle2D","angle3D","tiltAngle","animate","mojis","decay","lifetime","totalTicks","tick","window","requestAnimationFrame","update","forEach","fetti","progress","physics","cos","sin","wobbleY","transform","opacity","updateMojis","parentNode","removeChild","elements","transition","type","stiffness","damping","SpringAnim","posed","div","punished","resting","scale","Reward","state","rewardMe","config","container","handleAnimation","punishMe","handlePunishAnimation","rest","setTimeout","setState","this","springAnimation","containerStyle","Fragment","ref","lottieContainerStyles","lottieContainer","pose","Component","defaultProps","useMousePosition","mousePosition","setMousePosition","useEffect","mouseMoveHandler","event","clientX","clientY","addEventListener","removeEventListener","Smile","color","size","styles","className","viewBox","fill","d","Sad","DotRing","useContext","left","top","Sun2","height","canvasInput","useRef","onClick","current","stroke","strokeWidth","fillRule","Wave","min","max","background","id","points","Wave2","right","onMouseEnter","onMouseLeave","version","Square","backgroundColor","borderRadius","bottom","hollowStyle","getRandomFromInterval","Moon","open","setOpen","useSpring","f","r","bg","randomValue","cards","useSprings","i","z","interpolate","Sun","Sun3","handleViewport","inViewport","forwardedRef","text","Logo","to","HomeHead","confetti","calc","innerWidth","innerHeight","trans1","xy","mass","tension","friction","props1","set","onMouseMove","src","padding","border","boxShadow","placeholder","href","getCategories","Arrow","rotate","FlickHand","xmlns","useCookie","key","defaultValue","cookie","split","reduce","total","currentCookie","item","storedKey","storedValue","decodeURIComponent","getItem","setCookie","numberOfDays","now","Date","setTime","getTime","toUTCString","setItem","getRandomDifferent","arr","last","num","RewardAnswers","gridRows","userAnswers","toggle","trail","useTrail","Restart","imgSrc","array","randomIndex","currentIndex","shuffle","GradeA","answers","gradePercentage","numDrops","QuestionsDone","questions","setAnswers","setGradePercentage","grade","setGrade","reducer","accumulator","currentValue","JSON","parse","localStorage","toFixed","rightNum","totalRightWrongNum","redo","rightWrongNumReset","QuestionsNotDone","data","setUserAnswers","cardsPos","rot","delay","trans","s","Set","gone","bind","useDrag","args","down","mx","movement","xDir","direction","dir","add","isGone","has","addWrongNum","addRightNum","undefined","setDone","handleClick","e","stopPropagation","stringify","clear","title","answer","SmileSadFace","rightAnswerNum","wrongAnswerNum","MouseLeftRight","Questions","categoryQuestions","categoryTitle","categoryIndex","updateCookie","done","setRightAnswerNum","setWrongAnswerNum","cursorSide","gradeFBg","setGradeFBg","wrong","Rect","RandomBg","trans2","trans3","trans5","Items","colorPalette","rectPalette","randomBgArr","categoryMainShape","flexDirection","textAlign","setMouseover","handleMouseoverChange","newValue","items","onMouseOver","onMouseOut","sensitivity","interval","timeout","maxWidth","cat","catFigcaption","Footer","Home","setItems","setJsonLoaded","getItems","file","fetch","headers","then","response","json","myJson","category","setCategory","setCategoryIndex","setCategoryQuestions","setCategoryTitle","setBg","bgArr","handleRandomBg","newBg","useHistory","body","classList","remove","handleCategoryChange","newCategory","openQuestions","lockBodyScrolling","Report","fadeIn","frameborder","allowfullscreen","Credit","QuestionsMock","useParams","setIsLoading","setData","pathname","location","match","res","catch","error","console","log","history","goBack","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0e77d41.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const MouseContext = createContext({\n  cursorType: \"\",\n  cursorChangeHandler: () => {},\n});\n\nconst MouseContextProvider = (props) => {\n  const [cursorType, setCursorType] = useState(\"\");\n\n  const cursorChangeHandler = (cursorType) => {\n    setCursorType(cursorType);\n  };\n\n  return (\n    <MouseContext.Provider\n      value={{\n        cursorType: cursorType,\n        cursorChangeHandler: cursorChangeHandler,\n      }}\n    >\n      {props.children}\n    </MouseContext.Provider>\n  );\n};\n\nexport default MouseContextProvider;\n","const PI = Math.PI\nconst defaultEmoji = [\n  '<img src=\"img/pie.png\" />',\n  '<img src=\"img/pipe.png\" />'\n]\n\nconst createElements = (root, elementCount, elementSize, zIndex, emoji) => (\n  Array\n    .from({ length: elementCount })\n    .map((_, index) => {\n      const element = document.createElement('span')\n      const emojiIcon = emoji[Math.floor(Math.random()*emoji.length)]\n      element.innerHTML = emojiIcon\n      element.style.fontSize = `${elementSize}px`\n      element.style.position = 'absolute'\n      element.style.zIndex = zIndex\n      element.style.width = `${elementSize}px`\n      root.appendChild(element)\n      return element\n    })\n)\n\nconst radiansFrom = degrees => degrees * (PI / 180)\n\nconst generatePhysics = (angle, spread, startVelocity, random) => {\n  const radAngle = radiansFrom(angle)\n  const radSpread = radiansFrom(spread)\n  return {\n    x: 0,\n    y: 0,\n    wobble: random() * 10,\n    velocity: (startVelocity * 0.5) + (random() * startVelocity),\n    angle2D: -radAngle + ((0.5 * radSpread) - (random() * radSpread)),\n    angle3D: -(PI / 4) + (random() * (PI / 2)),\n    tiltAngle: random() * PI\n  }\n}\n\nconst updateMojis = (fetti, progress, decay) => {\n  fetti.physics.x += Math.cos(fetti.physics.angle2D) * fetti.physics.velocity\n  fetti.physics.y += Math.sin(fetti.physics.angle2D) * fetti.physics.velocity\n  fetti.physics.wobble += 0\n  fetti.physics.velocity *= decay\n  fetti.physics.y += 6\n  fetti.physics.tiltAngle += 0.1\n\n  const { x, y, tiltAngle } = fetti.physics\n  const wobbleX = x + 0\n  const wobbleY = y + 0\n  const transform = `translate3d(${wobbleX}px, ${wobbleY}px, 0) rotate(${tiltAngle/30}rad)`\n\n  fetti.element.style.transform = transform\n  fetti.element.style.opacity = 1\n}\n\nconst animate = (root, mojis, decay, lifetime) => {\n  const totalTicks = lifetime\n  let tick = 0\n\n  const update = () => {\n    mojis.forEach((fetti) => updateMojis(fetti, tick / totalTicks, decay))\n\n    tick += 1\n    if (tick < totalTicks) {\n      window.requestAnimationFrame(update)\n    } else {\n      mojis.forEach((fetti) => {\n        if (fetti.element.parentNode === root) {\n          return root.removeChild(fetti.element)\n        }\n      })\n    }\n  }\n\n  window.requestAnimationFrame(update)\n}\n\nconst emoji = (root, {\n  angle = 90,\n  decay = 0.9,\n  spread = 90,\n  startVelocity = 35,\n  elementCount = 20,\n  elementSize = 25,\n  lifetime = 200,\n  zIndex = 0,\n  emoji = defaultEmoji,\n  random = Math.random,\n} = {}) => {\n  const elements = createElements(root, elementCount, elementSize, zIndex, emoji)\n  const mojis = elements.map((element) => ({\n    element,\n    physics: generatePhysics(angle, spread, startVelocity, random)\n  }))\n\n  animate(root, mojis, decay, lifetime)\n}\n\nexport default emoji\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport posed from 'react-pose'\nimport emoji from './Emoji'\n\nconst transition = {\n  type: 'spring',\n  stiffness: 200,\n  damping: 2\n}\n\nconst SpringAnim = posed.div({\n  emoji: {\n    y: 5,\n    transition\n  },\n  punished: {\n    x: 5,\n    transition\n  },\n  resting: {\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition\n  }\n})\n\nexport default class Reward extends Component {\n  state = {\n    state: 'resting'\n  }\n\n  rewardMe = () => {\n    const { type, config } = this.props\n    const props = [this.container, config]\n    switch (type) {\n      case 'emoji': {\n        this.handleAnimation(type)\n        emoji(...props)\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  punishMe = () => {\n    this.handlePunishAnimation()\n  }\n\n  rest = () => {\n    setTimeout(() => {\n      this.setState({ state: 'resting' })\n    }, 100)\n  }\n\n  handleAnimation = (type) => {\n    this.setState({ state: type }, () => {\n      this.rest()\n    })\n  }\n\n  handlePunishAnimation = () => {\n    this.setState({ state: 'punished' }, () => {\n      this.rest()\n    })\n  }\n\n  render() {\n    const { config, children } = this.props\n    const { springAnimation = true, containerStyle = {} } = config\n    const { state } = this.state\n    return (\n      <React.Fragment>\n        <div style={containerStyle} ref={(ref) => { this.container = ref }} />\n        <div style={{...containerStyle, ...lottieContainerStyles}} ref={(ref) => { this.lottieContainer = ref }} />\n        <SpringAnim pose={springAnimation && state}>\n          {children}\n        </SpringAnim>\n      </React.Fragment>\n    )\n  }\n}\n\nconst lottieContainerStyles = { position: 'relative' }\n\nReward.propTypes = {\n  type: PropTypes.string.isRequired,\n  config: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n}\n\nReward.defaultProps = {\n  config: {}\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function useMousePosition() {\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\n\n  useEffect(() => {\n    const mouseMoveHandler = (event) => {\n      const { clientX, clientY } = event;\n      setMousePosition({ x: clientX, y: clientY });\n    };\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n    };\n  }, []);\n\n  return mousePosition;\n}\n","export default function Smile(props) {\n  const color = props.color;\n  const size = props.size;\n  const opacity = props.opacity === \"1\" ? \"opacity-100\": \"opacity-50\";\n\n  const styles = {\n    \"width\": size,\n    \"opacity\": opacity\n  }\n  return (\n    <div className={`m-2 ${opacity} hover:opacity-100`} style={styles}>\n      <svg viewBox=\"0 0 400 400\" fill={color}>\n        <g>\n          <g>\n            <path d=\"M200,0C89.543,0,0,89.543,0,200s89.543,200,200,200s200-89.543,200-200S310.457,0,200,0z M200,384\n              C98.38,384,16,301.62,16,200S98.38,16,200,16s184,82.38,184,184S301.62,384,200,384z\"/>\n          </g>\n        </g>\n        <g>\n          <g>\n            <path d=\"M302.971,245.553c-0.03-0.011-0.06-0.022-0.091-0.033c-4.136-1.554-8.749,0.538-10.303,4.674\n              c-0.006,0.015-0.011,0.031-0.017,0.046C279.6,285.6,242.4,309.36,200,309.36c-42.4,0-80-24-92.64-59.12\n              c-1.524-4.153-6.127-6.284-10.28-4.76s-6.284,6.127-4.76,10.28c15.36,41.6,58.56,69.6,107.68,69.6s92.32-27.92,107.68-69.52\n              C309.22,251.699,307.112,247.093,302.971,245.553z\"/>\n          </g>\n        </g>\n        <g>\n          <g>\n            <path d=\"M118.48,106.24c-16.569,0-30,13.431-30,30s13.431,30,30,30s30-13.431,30-30S135.049,106.24,118.48,106.24z M118.48,150.24\n              c-7.732,0-14-6.268-14-14c0-7.732,6.268-14,14-14c7.732,0,14,6.268,14,14C132.48,143.972,126.212,150.24,118.48,150.24z\"/>\n          </g>\n        </g>\n        <g>\n          <g>\n            <path d=\"M281.52,106.24c-16.569,0-30,13.431-30,30s13.431,30,30,30s30-13.431,30-30S298.089,106.24,281.52,106.24z M281.52,150.24\n              c-7.732,0-14-6.268-14-14c0-7.732,6.268-14,14-14s14,6.268,14,14C295.52,143.972,289.252,150.24,281.52,150.24z\"/>\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n","export default function Sad(props) {\n  const color = props.color;\n  const size = props.size;\n  const opacity = props.opacity === \"1\" ? \"opacity-100\": \"opacity-50\";\n\n  const styles = {\n    \"width\": size,\n    \"opacity\": opacity\n  }\n  return (\n    <div className={`m-2 ${opacity} hover:opacity-100`} style={styles}>\n    <svg viewBox=\"0 0 400 400\" fill={color}>\n      <g>\n        <g>\n          <path d=\"M307.68,305.12c-15.36-41.6-58.64-69.52-107.68-69.52h0c-49.04,0-92.32,28-107.68,69.6\n            c-1.524,4.153,0.607,8.756,4.76,10.28c4.153,1.524,8.756-0.607,10.28-4.76C120,275.36,157.6,251.6,200,251.6\n            c42.4,0,79.6,24,92.64,59.04c1.524,4.153,6.127,6.284,10.28,4.76S309.204,309.273,307.68,305.12z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M200,0C89.543,0,0,89.543,0,200s89.543,200,200,200s200-89.543,200-200S310.457,0,200,0z M200,384\n            C98.38,384,16,301.62,16,200S98.38,16,200,16s184,82.38,184,184S301.62,384,200,384z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M118.48,106.32c-16.569,0-30,13.431-30,30s13.431,30,30,30s30-13.431,30-30S135.049,106.32,118.48,106.32z M118.48,150.32\n            c-7.732,0-14-6.268-14-14c0-7.732,6.268-14,14-14c7.732,0,14,6.268,14,14C132.48,144.052,126.212,150.32,118.48,150.32z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M281.52,106.32c-16.569,0-30,13.431-30,30s13.431,30,30,30s30-13.431,30-30S298.089,106.32,281.52,106.32z M281.52,150.32\n            c-7.732,0-14-6.268-14-14c0-7.732,6.268-14,14-14s14,6.268,14,14C295.52,144.052,289.252,150.32,281.52,150.32z\"/>\n        </g>\n      </g>\n      </svg>\n    </div>\n  )\n}\n","import React, { useContext } from \"react\";\nimport \"./DotRing.scss\";\nimport useMousePosition from \"../../hooks/useMousePosition\";\nimport { MouseContext } from \"../../context/mouse-context\";\nimport Smile from '../shapes/Smile';\nimport Sad from '../shapes/Sad';\nconst DotRing = () => {\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n  const { x, y } = useMousePosition();\n  return (\n    <>\n      <div\n        style={{ left: `${x}px`, top: `${y}px` }}\n        className={\"ring \" + cursorType}\n      >\n      </div>\n      <div\n        className={\"dot \" + cursorType}\n        style={{ left: `${x}px`, top: `${y}px` }}\n      ></div>\n    </>\n  );\n};\n\nexport default DotRing;\n","import { useContext, useRef, useEffect } from \"react\";\nimport Reward from '../Reward/Reward.js';\nimport { IceCreamSet } from \"../Reward/MemphisSets\";\n\nexport default function Sun2(props) {\n  const size = props.size;\n  const styles = {\n    width: size,\n    height: size,\n    position: \"relative\",\n    top: \"15%\",\n    left: \"15%\"\n  }\n  const canvasInput = useRef(null);\n\n  function confetti(){\n    canvasInput.current.rewardMe();\n  }\n\n  return (\n    <div className=\"hover-rotate\" onClick={()=>confetti()}style={styles}>\n    <svg viewBox=\"0 0 68 68\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g transform=\"translate(-619.000000, -39.000000)\">\n                <g transform=\"translate(619.000000, 39.000000)\">\n                    <path d=\"M33.967625,2.05490651 L33.967625,2.05490651 C33.967625,3.13222799 34.7989007,4.03421166 35.8733505,4.10204727 C51.7509474,5.10003558 64.2700983,18.4808973 63.8837793,34.6976324 C63.5055086,50.5717402 50.5563478,63.5156946 34.6816253,63.8853411 C18.4700234,64.263036 5.0977513,51.7473658 4.10033537,35.8726831 C4.03249959,34.7982361 3.13051365,33.9669624 2.05433923,33.9669624 C0.862039142,33.9669624 -0.071565167,34.9787478 0.00431892715,36.1687453 C1.15580257,54.2055444 16.3544668,68.4194044 34.7793548,67.9905454 C52.8334455,67.5703095 67.5612835,52.8494071 67.9901436,34.7959365 C68.4282017,16.365346 54.2102819,1.1563721 36.1699883,0.00431647448 C34.9794129,-0.0715674292 33.967625,0.862609415 33.967625,2.05490651\" fill=\"#E26141\"></path>\n                    <path d=\"M55,33.4997094 C55,21.0736291 44.9263709,11 32.4997094,11 C20.0736291,11 10,21.0736291 10,33.4997094 C10,45.9263709 20.0736291,56 32.4997094,56 C44.9263709,56 55,45.9263709 55,33.4997094\" fill=\"#F4C3AE\"></path>\n                    <path d=\"M41.6407346,15 C43.6519348,15 44.9322436,14.4301404 46,13.7220022 C45.8096463,13.6398992 45.6181827,13.5604969 45.4244993,13.4837955 C44.471066,14.0671588 43.3455931,14.4933381 41.6407346,14.4933381 C39.0773422,14.4933381 37.8231169,13.5329492 36.495081,12.5163846 C36.2692094,12.342996 36.041118,12.1696075 35.806367,12 C35.536653,12.0183651 35.2674941,12.0383507 35,12.0664386 C35.4073457,12.3300324 35.7869431,12.6195535 36.1726452,12.9150162 C37.5123354,13.9402233 38.8975329,15 41.6407346,15\" fill=\"#121311\"></path>\n                    <path d=\"M30.5446463,15.5549645 C33.222845,15.5549645 34.5332431,16.605792 35.9207576,17.7180851 C37.3204484,18.8398345 38.7676846,20 41.6337457,20 C44.5003865,20 45.9470429,18.8398345 47.3467337,17.7180851 C48.1602242,17.0661939 48.9487824,16.4373522 50,16.0271868 C49.8225744,15.9007092 49.6451488,15.7754137 49.4648241,15.6542553 C48.5005798,16.0910165 47.7479706,16.6914894 47.009857,17.2825059 C45.6229223,18.394208 44.3119443,19.4450355 41.6337457,19.4450355 C38.955547,19.4450355 37.6451488,18.394208 36.2576343,17.2825059 C34.8579436,16.1601655 33.4107074,15 30.5446463,15 C27.6785852,15 26.2313491,16.1601655 24.8316583,17.2825059 C23.6407035,18.2369976 22.5036722,19.1447991 20.5114032,19.3829787 C20.3362969,19.5791962 20.1687283,19.7825059 20,19.9846336 C22.5106301,19.8475177 23.8610359,18.7665485 25.168535,17.7180851 C26.5560495,16.605792 27.8670274,15.5549645 30.5446463,15.5549645\" fill=\"#121311\"></path>\n                    <path d=\"M25.9403841,21.7180851 C27.3050307,20.6052009 28.5944021,19.5549645 31.2278906,19.5549645 C33.8619494,19.5549645 35.1507506,20.6052009 36.5153972,21.7180851 C37.8920194,22.8398345 39.3154033,24 42.1342283,24 C44.9536235,24 46.3764372,22.8398345 47.7530594,21.7180851 C49.1182763,20.6052009 50.4076477,19.5549645 53.0417065,19.5549645 C53.7938874,19.5549645 54.4342961,19.643026 55,19.7907801 C54.8237878,19.5602837 54.6430135,19.3339243 54.4582473,19.1105201 C54.0271262,19.0395981 53.5583675,19 53.0417065,19 C50.2223113,19 48.798357,20.1601655 47.4217348,21.2819149 C46.0576585,22.394208 44.768287,23.4450355 42.1342283,23.4450355 C39.5001695,23.4450355 38.2113683,22.394208 36.8467217,21.2819149 C35.4700996,20.1601655 34.0467156,19 31.2278906,19 C28.4090657,19 26.9856817,20.1601655 25.6090595,21.2819149 C24.2449832,22.394208 22.956182,23.4450355 20.3221232,23.4450355 C19.5186184,23.4450355 18.8411424,23.3463357 18.2480657,23.179078 C18.1619556,23.3445626 18.081548,23.5130024 18,23.6814421 C18.6603681,23.8794326 19.4193921,24 20.3221232,24 C23.1409482,24 24.5637619,22.8398345 25.9403841,21.7180851\" fill=\"#121311\"></path>\n                    <path d=\"M25.6648682,26.7178153 C27.056279,25.6053907 28.3709383,24.5544391 31.0560762,24.5544391 C33.7417955,24.5544391 35.0558733,25.6053907 36.4472841,26.7178153 C37.8509053,27.8402885 39.3022055,29 42.1763147,29 C45.0510054,29 46.5017241,27.8402885 47.9053453,26.7178153 C49.2973375,25.6053907 50.6119968,24.5544391 53.2977161,24.5544391 C55.982854,24.5544391 57.2975133,25.6053907 58.6883426,26.7178153 C58.7918408,26.8005674 58.8959204,26.8833195 59,26.9660716 C58.8918502,26.6362454 58.7767231,26.3093746 58.654037,25.9866414 C57.3562398,24.9652441 55.9194759,24 53.2977161,24 C50.4230254,24 48.9711438,25.1597115 47.5675226,26.2821847 C46.1766933,27.3946093 44.862034,28.4455609 42.1763147,28.4455609 C39.4905954,28.4455609 38.1765175,27.3946093 36.7851068,26.2821847 C35.3814855,25.1597115 33.9301854,24 31.0560762,24 C28.1819669,24 26.7306668,25.1597115 25.3270456,26.2821847 C23.9362162,27.3946093 22.6221384,28.4455609 19.9364191,28.4455609 C18.2571904,28.4455609 17.1140589,28.0347559 16.1535029,27.454309 C16.0982651,27.6351815 16.0505862,27.8196004 16,28.0022461 C16.9977689,28.5797376 18.2095114,29 19.9364191,29 C22.8105283,29 24.261247,27.8402885 25.6648682,26.7178153\" fill=\"#121311\"></path>\n                    <path d=\"M26.2276374,31.7180851 C27.592425,30.605792 28.8819298,29.5549645 31.5156904,29.5549645 C34.1500214,29.5549645 35.4389558,30.605792 36.8037434,31.7180851 C38.1805078,32.8398345 39.6040389,34 42.4231552,34 C45.2428418,34 46.6658025,32.8398345 48.042567,31.7180851 C49.4079249,30.605792 50.6974296,29.5549645 53.3317606,29.5549645 C55.9655213,29.5549645 57.255026,30.605792 58.6192433,31.7180851 C59.0601045,32.0768322 59.5060986,32.4397163 60,32.7671395 C59.9834606,32.5319149 59.9697728,32.2955083 59.9463895,32.0626478 C59.6053351,31.8150118 59.2802499,31.5508274 58.9506021,31.2819149 C57.5738376,30.1601655 56.1508769,29 53.3317606,29 C50.512074,29 49.0879726,30.1601655 47.7112082,31.2819149 C46.3469909,32.3947991 45.0574862,33.4456265 42.4231552,33.4456265 C39.7888242,33.4456265 38.4998898,32.3947991 37.1351022,31.2819149 C35.7583378,30.1601655 34.3348067,29 31.5156904,29 C28.6965742,29 27.2730431,30.1601655 25.8962786,31.2819149 C24.5320613,32.3947991 23.2431269,33.4456265 20.608796,33.4456265 C18.448405,33.4456265 17.1931198,32.7381797 16.0587435,31.8699764 C16.0353601,32.0821513 16.0171097,32.2955083 16,32.5088652 C17.1241105,33.3262411 18.4603819,34 20.608796,34 C23.4279122,34 24.850873,32.8398345 26.2276374,31.7180851\" fill=\"#121311\"></path>\n                    <path d=\"M26.2288919,35.7180851 C27.5957524,34.605792 28.8872157,33.5549645 31.5249766,33.5549645 C34.1633088,33.5549645 35.4542009,34.605792 36.8210614,35.7180851 C38.1999169,36.8398345 39.6256101,38 42.4490082,38 C45.2729775,38 46.6980995,36.8398345 48.076955,35.7180851 C49.4443867,34.605792 50.73585,33.5549645 53.3741822,33.5549645 C56.0119431,33.5549645 57.3034064,34.605792 58.6696957,35.7180851 C59.0723855,36.0455083 59.480216,36.3758865 59.925174,36.68026 C59.9508776,36.4751773 59.9794371,36.2706856 60,36.0638298 C59.6589989,35.8161939 59.3322775,35.5514184 59.0015578,35.2819149 C57.6227023,34.1601655 56.1975802,33 53.3741822,33 C50.5502129,33 49.1239485,34.1601655 47.7450929,35.2819149 C46.3788036,36.394208 45.0873403,37.4450355 42.4490082,37.4450355 C39.8106761,37.4450355 38.519784,36.394208 37.1529235,35.2819149 C35.7740679,34.1601655 34.3483747,33 31.5249766,33 C28.7015786,33 27.2758853,34.1601655 25.8970298,35.2819149 C24.5307405,36.394208 23.2398484,37.4450355 20.6015163,37.4450355 C18.4098556,37.4450355 17.1480943,36.7192671 16,35.8356974 C16.0222765,36.0845154 16.0519784,36.3315603 16.0822515,36.5780142 C17.1875065,37.3634752 18.5115277,38 20.6015163,38 C23.4249143,38 24.8500363,36.8398345 26.2288919,35.7180851\" fill=\"#121311\"></path>\n                    <path d=\"M26.0347941,40.7184064 C27.4013488,39.6053907 28.6925231,38.5544391 31.3296939,38.5544391 C33.9674358,38.5544391 35.2580391,39.6053907 36.6245938,40.7184064 C38.0031408,41.8402885 39.4285151,43 42.2512815,43 C45.074619,43 46.4994221,41.8402885 47.8779692,40.7184064 C49.245095,39.6053907 50.5362693,38.5544391 53.1740112,38.5544391 C55.811182,38.5544391 57.1023563,39.6053907 58.46834,40.7184064 C58.5876922,40.8153446 58.7081866,40.9128739 58.829252,41.009812 C58.8886426,40.8218466 58.9451779,40.6338811 59,40.4441423 C58.9331856,40.3903535 58.8669422,40.3365646 58.8001278,40.2821847 C57.4215808,39.1603026 55.9967776,38 53.1740112,38 C50.3506737,38 48.9247284,39.1603026 47.5461814,40.2821847 C46.1801977,41.3946093 44.8890233,42.4455609 42.2512815,42.4455609 C39.6135396,42.4455609 38.3229364,41.3946093 36.9563816,40.2821847 C35.5778346,39.1603026 34.1524603,38 31.3296939,38 C28.5069275,38 27.0815533,39.1603026 25.7030062,40.2821847 C24.3370226,41.3946093 23.0464193,42.4455609 20.4086774,42.4455609 C18.9341917,42.4455609 17.8811508,42.1169169 17,41.6328171 C17.0868016,41.885211 17.1815982,42.1334673 17.2775368,42.3817236 C18.1141447,42.7546991 19.1129346,43 20.4086774,43 C23.2314438,43 24.656247,41.8402885 26.0347941,40.7184064\" fill=\"#121311\"></path>\n                    <path d=\"M25.2551204,45.7178153 C26.6296386,44.6053907 27.9283371,43.5544391 30.5808758,43.5544391 C33.2339888,43.5544391 34.532113,44.6053907 35.9066312,45.7178153 C37.2932116,46.8396974 38.7268921,48 41.5661079,48 C44.4058981,48 45.8390042,46.8396974 47.2255846,45.7178153 C48.6006772,44.6053907 49.8993757,43.5544391 52.5524888,43.5544391 C54.489336,43.5544391 55.7030246,44.1159712 56.7524374,44.8512827 C56.8374473,44.6869606 56.9190108,44.5208654 57,44.354179 C55.9069335,43.5999527 54.5938752,43 52.5524888,43 C49.7126986,43 48.2784437,44.1597115 46.8918633,45.2821847 C45.5179195,46.3946093 44.2192209,47.4449699 41.5661079,47.4449699 C38.9129948,47.4449699 37.6148707,46.3946093 36.2403525,45.2821847 C34.8537721,44.1597115 33.4200916,43 30.5808758,43 C27.74166,43 26.3079795,44.1597115 24.9213991,45.2821847 C23.5474553,46.3946093 22.2493311,47.4449699 19.5962181,47.4449699 C19.3888629,47.4449699 19.1918467,47.4366946 19,47.4242818 C19.1332588,47.6163849 19.2670919,47.8078969 19.4060946,47.9952713 C19.469852,47.9964535 19.5307375,48 19.5962181,48 C22.4354339,48 23.86854,46.8396974 25.2551204,45.7178153\" fill=\"#121311\"></path>\n                    <path d=\"M30.8694258,47.5549645 C33.5176028,47.5549645 34.8133118,48.605792 36.1852728,49.7180851 C37.5692735,50.8398345 39.0002867,52 41.8342202,52 C44.668727,52 46.0991669,50.8398345 47.4831676,49.7180851 C48.8557019,48.605792 50.1519842,47.5549645 52.8001612,47.5549645 C53.4978948,47.5549645 54.0998835,47.6294326 54.6365135,47.7576832 C54.7597778,47.6004728 54.8807489,47.4408983 55,47.2807329 C54.3670519,47.105792 53.6469587,47 52.8001612,47 C49.9656544,47 48.5340679,48.1601655 47.1500672,49.2819149 C45.7786796,50.394208 44.4823972,51.4456265 41.8342202,51.4456265 C39.1860432,51.4456265 37.8903341,50.394208 36.5183732,49.2819149 C35.1343725,48.1601655 33.7033593,47 30.8694258,47 C28.0354923,47 26.6044791,48.1601655 25.2204784,49.2819149 C24.5238914,49.8475177 23.8450775,50.3959811 23,50.7996454 C23.1490639,50.9308511 23.2992744,51.0602837 23.4512049,51.1873522 C24.2532832,50.7695035 24.9091642,50.2405437 25.5535788,49.7180851 C26.9255397,48.605792 28.2218221,47.5549645 30.8694258,47.5549645\" fill=\"#121311\"></path>\n                    <path d=\"M50,53 C49.2141939,53.2601381 48.5867832,53.622088 48,54 C48.690666,53.6980155 49.3592183,53.3654012 50,53\" fill=\"#121311\"></path>\n                    <path d=\"M35.9277862,54.4503064 C36.7122566,55.0205169 37.5111367,55.6013856 38.5688172,56 C39.050105,55.9717559 39.5273581,55.9280576 40,55.8715694 C38.3561283,55.575806 37.3307258,54.8339995 36.2626703,54.057554 C34.8712586,53.0460965 33.4325827,52 30.583474,52 C28.4600436,52 27.1205072,52.5808686 26,53.2960298 C26.1740706,53.3887557 26.346412,53.484146 26.5233645,53.5726086 C27.5424266,52.9576339 28.7349829,52.5003997 30.583474,52.5003997 C33.2458314,52.5003997 34.5484787,53.4473754 35.9277862,54.4503064\" fill=\"#121311\"></path>\n                </g>\n            </g>\n        </g>\n    </svg>\n      <Reward ref={canvasInput} type='emoji' config = {{\"emoji\": IceCreamSet(), \"elementCount\": 1, \"spread\": 100, \"decay\": 0.91, \"elementSize\": 50}}></Reward>\n    </div>\n  )\n}\n","const DefaultSet = () => {\n  return [\n    '<img src=\"/img/line.png\" />',\n    '<img src=\"/img/square.png\" />',\n    '<img src=\"/img/circle.png\" />',\n    '<img src=\"/img/wave.png\" />',\n    '<img src=\"/img/triangle.png\" />',\n    '<img src=\"/img/cross.png\" />',\n    '<img src=\"/img/half.png\" />'\n  ]\n};\n\nconst MemphisSet1= () => {\n  return [\n    '<img src=\"/img/pie.png\" />',\n    '<img src=\"/img/pipe.png\" />',\n    '<img src=\"/img/sun3.svg\" />'\n  ]\n};\n\nconst MemphisSet2= () => {\n  return [\n    '<img src=\"/img/Memphis2/1.svg\" />',\n    '<img src=\"/img/Memphis2/2.svg\" />',\n    '<img src=\"/img/Memphis2/3.svg\" />',\n    '<img src=\"/img/Memphis2/4.svg\" />',\n    '<img src=\"/img/Memphis2/5.svg\" />',\n    '<img src=\"/img/Memphis2/6.svg\" />',\n  ]\n};\n\nconst TwitchSet = () => {\n  return [\n    '<img src=\"/img/Twitch/Twitch1.svg\" />',\n    '<img src=\"/img/Twitch/Twitch2.svg\" />',\n    '<img src=\"/img/Twitch/Twitch3.svg\" />',\n    '<img src=\"/img/Twitch/Twitch4.svg\" />',\n    '<img src=\"/img/Twitch/Twitch5.svg\" />',\n    '<img src=\"/img/Twitch/Twitch6.svg\" />',\n    '<img src=\"/img/Twitch/Twitch7.svg\" />',\n    '<img src=\"/img/Twitch/Twitch8.svg\" />',\n    '<img src=\"/img/Twitch/Twitch9.svg\" />'\n  ]\n}\n\nconst FruitSet = () => {\n  return [\n    '<img src=\"/img/Fruit/1.svg\" />',\n    '<img src=\"/img/Fruit/2.svg\" />',\n    '<img src=\"/img/Fruit/3.svg\" />',\n    '<img src=\"/img/Fruit/4.svg\" />',\n    '<img src=\"/img/Fruit/5.svg\" />',\n    '<img src=\"/img/Fruit/6.svg\" />'\n  ]\n}\n\nconst FruitSet2 = () => {\n  return [\n    '<img src=\"/img/Fruit2/1.svg\" />',\n    '<img src=\"/img/Fruit2/2.svg\" />',\n    '<img src=\"/img/Fruit2/3.svg\" />',\n    '<img src=\"/img/Fruit2/4.svg\" />',\n    '<img src=\"/img/Fruit2/5.svg\" />',\n    '<img src=\"/img/Fruit2/6.svg\" />'\n  ]\n}\n\nconst IceCreamSet = () => {\n  return [\n    '<img src=\"/img/icecream/1.svg\" />',\n    '<img src=\"/img/icecream/2.svg\" />',\n    '<img src=\"/img/icecream/3.svg\" />',\n    '<img src=\"/img/icecream/4.svg\" />',\n    '<img src=\"/img/icecream/5.svg\" />',\n    '<img src=\"/img/icecream/6.svg\" />'\n  ]\n}\n\nconst DonutSet = () => {\n  return [\n    '<img src=\"/img/donut/1.svg\" />',\n    '<img src=\"/img/donut/2.svg\" />',\n    '<img src=\"/img/donut/3.svg\" />',\n    '<img src=\"/img/donut/4.svg\" />'\n  ]\n}\n\nconst BallonSet = () => {\n  return [\n    '<img src=\"/img/ballon/1.svg\" />',\n    '<img src=\"/img/ballon/2.svg\" />',\n    '<img src=\"/img/ballon/3.svg\" />',\n    '<img src=\"/img/ballon/4.svg\" />',\n    '<img src=\"/img/ballon/5.svg\" />'\n  ]\n}\n\nexport { DefaultSet, MemphisSet1, MemphisSet2, TwitchSet, FruitSet, FruitSet2, IceCreamSet, DonutSet, BallonSet }\n","\nexport default function Wave(props) {\n  const styles = {\n    width: \"150px\",\n    height: \"50px\",\n    background: \"transparent\",\n    position: \"absolute\",\n    top: \"80%\",\n    left: (randomIntFromInterval(55, 70) + \"%\") // 50 -70%\n  }\n\n  function randomIntFromInterval(min, max) { // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const randomDropShadow = [\"drop-shadow-left-bottom\", \"drop-shadow-left-top\",  \"drop-shadow-right-top\", \"drop-shadow-right-bottom\"];\n\n  return (\n    <div className=\"wave-hover\" style={styles}>\n      <svg className={`${randomDropShadow[Math.floor(Math.random()*4)]}`} viewBox=\"0 0 73 12\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g transform=\"translate(-610.000000, -163.000000)\" fill=\"#605795\">\n                <polyline id=\"Fill-234\" transform=\"translate(646.410766, 169.190109) rotate(-270.000000) translate(-646.410766, -169.190109) \" points=\"640.926266 143.963609 647.827266 132.819609 651.241266 134.932609 645.648266 143.963609 651.895266 154.053609 645.648266 164.142609 651.895266 174.231609 645.648266 184.320609 651.895266 194.412609 644.995266 205.560609 641.580266 203.446609 647.172266 194.412609 640.926266 184.320609 647.172266 174.231609 640.926266 164.142609 647.172266 154.053609 640.926266 143.963609\"></polyline>\n            </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n","import { useContext, useRef } from \"react\";\nimport Reward from '../Reward/Reward.js';\nimport { MouseContext } from \"../../context/mouse-context\";\n\nexport default function Wave2(props) {\n  const { cursorChangeHandler } = useContext(MouseContext);\n  const size = props.size;\n  const styles = {\n    width: size,\n    height: size,\n    position: \"absolute\",\n    top: \"5%\",\n    right: \"15%\"\n  }\n  const canvasInput = useRef(null);\n  function confetti(){\n    canvasInput.current.rewardMe();\n  }\n\n  return (\n    <div onClick={()=>confetti()} style={styles} onMouseEnter={() => cursorChangeHandler(\"hovered\")}\n  onMouseLeave={() => cursorChangeHandler(\"\")}>\n  <svg viewBox=\"0 0 105 30\" version=\"1.1\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(-593.000000, -324.000000)\">\n              <g transform=\"translate(593.000000, 324.000000)\">\n                  <path d=\"M92.301381,30 C84.8544969,30 81.7414482,22.9968543 79.23922,17.3696735 C78.1397432,14.8956398 76.0937082,10.2913523 74.7806577,10.2913523 C73.4676073,10.2913523 71.420718,14.8956398 70.3212411,17.3696735 C67.8198672,22.9968543 64.7076728,30 57.2599345,30 C49.8121962,30 46.7000018,22.9968543 44.1986278,17.3696735 C43.099151,14.8956398 41.053116,10.2913523 39.7409198,10.2913523 C38.4278694,10.2913523 36.3809801,14.8956398 35.2815032,17.3696735 C32.7809836,22.9968543 29.6670806,30 22.2193423,30 C14.7724583,30 11.6594096,22.9968543 9.15718136,17.3696735 C8.0577045,14.8956398 6.01166948,10.2913523 4.69861904,10.2913523 C2.10327274,10.2913523 0,8.21177876 0,5.64567617 C0,3.08041826 2.10327274,1 4.69861904,1 C12.1455031,1 15.259406,8.00399033 17.76078,13.6311712 C18.8602568,16.1035156 20.9062918,20.7086477 22.2193423,20.7086477 C23.5323927,20.7086477 25.579282,16.1043602 26.6787589,13.6311712 C29.1801328,8.00399033 32.2923272,1 39.7409198,1 C47.1878038,1 50.2999982,8.00399033 52.8013722,13.6311712 C53.900849,16.1043602 55.9477383,20.7086477 57.2599345,20.7086477 C58.5721306,20.7086477 60.6190199,16.1043602 61.7184968,13.6311712 C64.2190164,8.00399033 67.3329194,1 74.7806577,1 C82.228396,1 85.3414447,8.00399033 87.8428186,13.6311712 C88.9422955,16.1035156 90.9883305,20.7086477 92.301381,20.7086477 C94.8975816,20.7086477 97,22.7890659 97,25.3543238 C97,27.9204264 94.8975816,30 92.301381,30\" fill=\"#F4C3AE\"></path>\n                  <path d=\"M82.3767006,9.40626514 C83.7871735,9.40626514 85.5063214,13.0405039 87.1465856,16.7619645 C89.6194147,22.3749394 92.6967321,29.3586637 99.9625968,29.3586637 C102.385695,29.3586637 104.356927,27.3927543 104.356927,24.9761993 C104.356927,22.5587892 102.385695,20.5937349 99.9625968,20.5937349 C98.5529813,20.5937349 96.8338335,16.9620614 95.1944267,13.241456 C92.7181679,7.62335034 89.6408504,0.64133626 82.3767006,0.64133626 C75.110836,0.64133626 72.034376,7.62506057 69.5615469,13.2354702 C67.9212826,16.9594961 66.2012774,20.5937349 64.7908045,20.5937349 C63.3829039,20.5937349 61.6637561,16.9612063 60.0243493,13.2406009 C57.5498053,7.62506057 54.4724879,0.64133626 47.2083381,0.64133626 C39.9441883,0.64133626 36.8668708,7.62335034 34.3931843,13.2337599 C32.7520626,16.9594961 31.0320574,20.5937349 29.6232994,20.5937349 C28.2136839,20.5937349 26.4945361,16.9620614 24.8551293,13.241456 C22.3788705,7.62335034 19.301553,0.64133626 12.0374032,0.64133626 C9.61430509,0.64133626 7.64307275,2.60639056 7.64307275,5.0238007 C7.64307275,7.44035573 9.61430509,9.40626514 12.0374032,9.40626514 C13.4478761,9.40626514 15.1661665,13.0405039 16.8064307,16.7619645 C19.2801172,22.3749394 22.3574347,29.3586637 29.6232994,29.3586637 C36.8874491,29.3586637 39.9647666,22.3749394 42.4375957,16.7636747 C44.0787174,13.0405039 45.7978652,9.40626514 47.2083381,9.40626514 C48.6170961,9.40626514 50.3362439,13.0405039 51.9765082,16.7619645 C54.4501947,22.3749394 57.5275121,29.3586637 64.7908045,29.3586637 C72.0566691,29.3586637 75.1339866,22.3749394 77.6068157,16.7636747 C79.2479374,13.0405039 80.9670852,9.40626514 82.3767006,9.40626514 Z M99.9625968,30 C92.2765913,30 89.1058139,22.8042072 86.557531,17.0210643 C85.7172492,15.1133027 83.4845006,10.0476014 82.3767006,10.0476014 C81.2689007,10.0476014 79.0370095,15.1133027 78.1958703,17.0202092 C75.6475874,22.8042072 72.47681,30 64.7908045,30 C57.1065138,30 53.9357365,22.8042072 51.3883109,17.0219194 C50.5471718,15.1133027 48.3152806,10.0476014 47.2083381,10.0476014 C46.1005381,10.0476014 43.8677895,15.1133027 43.0275078,17.0202092 C40.4792248,22.8042072 37.3084474,30 29.6232994,30 C21.9372938,30 18.7665165,22.8042072 16.2182335,17.0210643 C15.3770944,15.1133027 13.1452032,10.0476014 12.0374032,10.0476014 C9.26018636,10.0476014 7,7.79351823 7,5.0238007 C7,2.25322806 9.26018636,0 12.0374032,0 C19.7208364,0 22.8916138,7.19493772 25.4407542,12.9755152 C26.2836082,14.8892626 28.5163568,19.9523986 29.6232994,19.9523986 C30.7310993,19.9523986 32.9629905,14.8858421 33.8032722,12.9789357 C36.35327,7.19493772 39.5249049,0 47.2083381,0 C54.8917713,0 58.0634061,7.19579283 60.6108316,12.9772254 C61.4536856,14.8884075 63.6838619,19.9523986 64.7908045,19.9523986 C65.8994619,19.9523986 68.1322105,14.8858421 68.9716348,12.9789357 C71.5207752,7.19579283 74.6915526,0 82.3767006,0 C90.0601339,0 93.2309112,7.19493772 95.7800516,12.9755152 C96.6229056,14.8892626 98.8556542,19.9523986 99.9625968,19.9523986 C102.739814,19.9523986 105,22.2056267 105,24.9761993 C105,27.7459168 102.739814,30 99.9625968,30 L99.9625968,30 Z\" fill=\"#121311\"></path>\n              </g>\n          </g>\n      </g>\n  </svg>\n      <Reward ref={canvasInput} type='emoji' config = {{\"elementCount\": 5, \"elementSize\": 50}}></Reward>\n    </div>\n  )\n}\n","export default function Square(props) {\n  const styles = {\n    backgroundColor: \"transparent\",\n    borderRadius: \"50%\",\n    width: props.size+\"px\",\n    height: props.size+\"px\",\n    position: \"absolute\",\n    right: \"20%\",\n    bottom: '-50px'\n  }\n  const randomDropShadow = [\"drop-shadow-left-bottom\", \"drop-shadow-left-top\",  \"drop-shadow-right-top\", \"drop-shadow-right-bottom\"];\n  const randomBg = [\"dot-bg\", \"wave-bg\", \"line-bg\", \"box-bg\", \"skew-dot-bg\", \"cross-bg\", \"line-h-bg\",\"paper-bg\", \"diagonal-bg\", \"radial-bg\"]; // do not include radial-bg in not square shape\n  const hollowStyle = {\n    width: (props.size/ 2 - 10) + \"px\",\n    height: (props.size/ 2 - 10) + \"px\",\n    borderRadius: \"50%\",\n    transform: \"rotate(45deg)\"\n  }\n\n  return (\n    <div className={ `hover-rotate flex items-center justify-center border-image ${randomBg[Math.floor(Math.random()*9)]} ${props.color}`} style={styles}>\n      <span className={props.color} style={hollowStyle}></span>\n    </div>\n  )\n}\n","export default function getRandomFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import React, { useState } from 'react'\nimport { useSpring, useSprings, animated, interpolate } from 'react-spring';\nimport getRandomFromInterval from \"../../getRandomFromInterval\";\n\nexport default function Moon(props) {\n  const styles = {\n    width: \"100px\",\n    height: \"100px\",\n    bottom: \"15%\",\n    left: \"15%\",\n    zIndex: 9\n  }\n  const [open, setOpen] = useState(false)\n  const { f, r } = useSpring({ f: open ? 0 : 1, r: open ? -3 : 3 })\n  const bg = [\"var(--red)\", \"var(--yellow)\", \"var(--purple)\", \"var(--green)\", \"var(--orange)\"];\n  const randomValue = getRandomFromInterval(-200, 200);\n  const cards = useSprings(\n    5,\n    [0, 1, 2, 3, 4].map((i) => ({ opacity: 1, x: open? (i/5) *randomValue: 0, y: open? (i/5) *randomValue: 0, z: open ? (i / 5) * 80 : 0, background: bg[i]}))\n  )\n  return (\n    <div className=\"absolute flex items-center justify-center\" style={styles} onMouseEnter={() => setOpen(true)} onMouseLeave={() => setOpen(false)}>\n      {cards.map(({ x, y, z, opacity, background }, index) => (\n        <animated.div\n          key={index} style={{\n            opacity,\n            background,\n            transform: interpolate(\n              [x, y, z, f.interpolate([0, 0.2, 0.6, 1], [0, index, index, 0]), r],\n              (x, y, z, f, r) => `translate3d(${x}px,${y}px,${z}px) rotateX(${f * r}deg)`\n            )\n          }}>\n          <svg style={{\"width\": \"100px\"}} className={`absolute`} viewBox=\"0 0 42 39\">\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(-553.000000, -175.000000)\" fill={bg[index]}>\n                <path\n                  d=\"M592.066,191.098 C589.641,193.151 586.013,192.849 583.961,190.425 C580.099,185.864 573.247,185.295 568.686,189.157 C564.126,193.018 563.556,199.87 567.419,204.431 C569.47,206.856 569.17,210.484 566.745,212.536 C564.321,214.589 560.693,214.288 558.64,211.863 C550.68,202.462 551.853,188.339 561.254,180.379 C570.655,172.419 584.779,173.592 592.739,182.993 C594.792,185.417 594.49,189.046 592.066,191.098\"\n                  id=\"Fill-247\"></path>\n              </g>\n            </g>\n          </svg>\n          {index === 4 && <animated style={{ transform: f.interpolate([0, 1], ['scale(0.7)', 'scale(1)']) }} />}\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n","import { useContext, useRef, useEffect } from \"react\";\nimport Reward from '../Reward/Reward.js';\nimport { DonutSet } from \"../Reward/MemphisSets\";\n\nexport default function Sun(props) {\n  const styles = {\n    width: \"70px\",\n    height: \"70px\",\n    position: \"absolute\",\n    top: \"15%\",\n    right: \"15%\"\n  }\n  const canvasInput = useRef(null);\n  function confetti(){\n    canvasInput.current.rewardMe();\n  }\n\n  /*useEffect(() => {\n    const interval = setInterval(() => {\n      canvasInput.current.rewardMe();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);*/\n\n  return (\n    <div onClick={()=>confetti()} style={styles}>\n      <svg>\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(-567.000000, -448.000000)\">\n                  <g transform=\"translate(567.000000, 448.000000)\">\n                      <g>\n                          <path d=\"M58.0387457,30.4685715 C84.4786188,30.4685715 105.912513,51.8540888 105.912513,78.2342858 C105.912513,104.614483 84.4786188,126 58.0387457,126 C31.5988727,126 10.1649781,104.614483 10.1649781,78.2342858 C10.1649781,51.8540888 31.5988727,30.4685715 58.0387457,30.4685715\" fill=\"#9FD5D8\"></path>\n                          <path d=\"M68.750228,52.0067646 C67.6025692,52.0612917 66.7281625,52.9882519 66.7828129,54.1333204 C66.8921137,55.3329159 67.6025692,55.9872408 68.750228,56.0962949 C69.9525372,56.150822 70.7722935,55.2238618 70.7722935,54.0787933 C70.7722935,52.8791977 69.8978868,52.0067646 68.750228,52.0067646\" fill=\"#0A0B09\"></path>\n                          <path d=\"M68.750228,90.9936204 C69.8978868,90.9936204 70.7722935,90.1211872 70.7722935,88.9215917 C70.7722935,87.7765232 69.8978868,86.849563 68.750228,86.9040901 C67.6572196,86.9040901 66.7281625,87.9401044 66.7828129,89.0306458 C66.7828129,90.0666602 67.71187,90.9936204 68.750228,90.9936204\" fill=\"#0A0B09\"></path>\n                          <path d=\"M42.3540753,64.7660992 C43.5017341,64.8206263 44.3761408,63.839139 44.3761408,62.6940705 C44.3214904,61.549002 43.3924332,60.6765689 42.2447744,60.731096 C41.0424652,60.785623 40.2227089,61.7125832 40.3320097,62.8576517 C40.4413106,64.0572473 41.2064165,64.7115721 42.3540753,64.7660992\" fill=\"#0A0B09\"></path>\n                          <path d=\"M42.3540753,113.077084 C41.151766,113.077084 40.4413106,113.731409 40.3320097,114.931005 C40.2227089,116.185127 40.9878148,117.003033 42.190124,117.05756 C43.3924332,117.112087 44.26684,116.348708 44.3214904,115.149113 C44.3761408,114.004044 43.5017341,113.077084 42.3540753,113.077084\" fill=\"#0A0B09\"></path>\n                          <path d=\"M86.4023136,86.9040901 C85.3093052,86.849563 84.3255976,87.8310503 84.2709472,88.9215917 C84.2709472,89.957606 85.2000043,90.9390933 86.1837119,90.9936204 C87.2220699,91.0481475 88.3150782,90.0121331 88.3150782,88.9761188 C88.3697287,87.9401044 87.3860211,86.9040901 86.4023136,86.9040901\" fill=\"#0A0B09\"></path>\n                          <path d=\"M77.3303439,60.731096 C76.1826851,60.785623 75.3629288,61.2763667 75.3082784,62.5850164 C75.2536279,63.839139 75.9640834,64.6570451 77.1663926,64.7660992 C78.3140514,64.8751534 79.2431086,64.0027202 79.297759,62.8576517 C79.297759,61.7125832 78.4233523,60.6765689 77.3303439,60.731096\" fill=\"#0A0B09\"></path>\n                          <path d=\"M59.7875592,64.7660992 C60.9898684,64.7660992 61.8642751,63.8936661 61.8096247,62.7485976 C61.8096247,61.549002 60.935218,60.731096 59.7329087,60.785623 C58.6399003,60.785623 57.820144,61.6580562 57.8747945,62.8031247 C57.8747945,63.9481931 58.6945508,64.7660992 59.7875592,64.7660992\" fill=\"#0A0B09\"></path>\n                          <path d=\"M94.7091774,64.7660992 C95.9114866,64.8206263 96.7858933,64.0027202 96.7858933,62.8031247 C96.7858933,61.549002 96.0207874,60.731096 94.7638278,60.731096 C93.6708194,60.731096 92.7964127,61.6580562 92.7964127,62.7485976 C92.7417622,63.7846119 93.616169,64.7115721 94.7091774,64.7660992\" fill=\"#0A0B09\"></path>\n                          <path d=\"M94.8184782,82.2147619 C96.0207874,82.2147619 96.8405437,81.3423288 96.8405437,80.1427332 C96.8405437,79.0521918 95.966137,78.2888128 94.8184782,78.2342858 C93.7254698,78.2342858 92.7964127,79.0521918 92.7964127,80.1427332 C92.7964127,81.3423288 93.6708194,82.2147619 94.8184782,82.2147619\" fill=\"#0A0B09\"></path>\n                          <path d=\"M42.2994249,95.6284214 C40.9878148,95.6284214 40.4413106,96.3372733 40.3320097,97.5368689 C40.2773593,98.6819374 41.151766,99.6088976 42.3540753,99.6088976 C43.4470837,99.6088976 44.3214904,98.7364645 44.3214904,97.6459231 C44.3761408,96.5008546 43.5017341,95.6284214 42.2994249,95.6284214\" fill=\"#0A0B09\"></path>\n                          <path d=\"M42.4087257,78.2342858 C41.2064165,78.2342858 40.4413106,78.9431377 40.3866602,80.0882062 C40.3320097,81.3423288 41.0971156,82.1602349 42.2994249,82.2147619 C43.4470837,82.269289 44.3214904,81.3968559 44.3761408,80.1972603 C44.3761408,79.1067189 43.5563845,78.2888128 42.4087257,78.2342858\" fill=\"#0A0B09\"></path>\n                          <path d=\"M59.7329087,113.077084 C58.6399003,113.077084 57.820144,114.004044 57.820144,115.094586 C57.8747945,116.239654 58.6945508,117.112087 59.7329087,117.112087 C60.935218,117.112087 61.7549743,116.294181 61.7549743,115.094586 C61.8642751,113.949517 60.935218,113.077084 59.7329087,113.077084\" fill=\"#0A0B09\"></path>\n                          <path d=\"M68.9688297,104.352753 C67.9304717,104.189172 66.8374633,105.170659 66.7828129,106.2612 C66.7281625,107.297215 67.71187,108.387756 68.750228,108.387756 C69.788586,108.442283 70.7176431,107.56985 70.7722935,106.479309 C70.7722935,105.225186 70.1711389,104.516334 68.9688297,104.352753\" fill=\"#0A0B09\"></path>\n                          <path d=\"M68.750228,69.4009002 C67.71187,69.4009002 66.7281625,70.4369146 66.7828129,71.527456 C66.7828129,72.6179974 67.6572196,73.3813764 68.8048784,73.3813764 C70.0071876,73.3813764 70.7722935,72.6179974 70.7722935,71.4729289 C70.7722935,70.3278605 69.8978868,69.4009002 68.750228,69.4009002\" fill=\"#0A0B09\"></path>\n                          <path d=\"M51.3167441,52.0612917 C50.2237357,52.0612917 49.2400282,53.0427789 49.2946786,54.1333204 C49.4039794,55.3329159 50.1144349,55.9872408 51.3167441,56.0417678 C52.4644029,56.150822 53.2841592,55.2238618 53.2841592,53.9697391 C53.2295088,52.9337248 52.3551021,52.0612917 51.3167441,52.0612917\" fill=\"#0A0B09\"></path>\n                          <path d=\"M59.7329087,95.6284214 C58.6399003,95.6284214 57.9840953,96.2827463 57.8747945,97.4823418 C57.7654936,98.6274103 58.5852499,99.4998435 59.6782583,99.5543705 C60.8805676,99.6088976 61.8096247,98.7909915 61.8642751,97.6459231 C61.8642751,96.5008546 61.0991692,95.6829485 59.7329087,95.6284214\" fill=\"#0A0B09\"></path>\n                          <path d=\"M77.3303439,95.6284214 C76.1280347,95.6829485 75.4175792,96.3372733 75.3629288,97.5368689 C75.3082784,98.7364645 76.1280347,99.6088976 77.3303439,99.6088976 C78.4233523,99.6088976 79.297759,98.7909915 79.3524094,97.7004501 C79.297759,96.5008546 78.4780027,95.5738944 77.3303439,95.6284214\" fill=\"#0A0B09\"></path>\n                          <path d=\"M51.3713945,86.9040901 C50.3330365,86.9040901 49.2946786,87.8855773 49.2946786,88.9761188 C49.2946786,90.0121331 50.387687,90.9936204 51.4260449,90.9936204 C52.4644029,90.9936204 53.2841592,90.0666602 53.2841592,88.9215917 C53.2295088,87.7765232 52.4097525,86.9040901 51.3713945,86.9040901\" fill=\"#0A0B09\"></path>\n                          <path d=\"M59.7875592,82.2147619 C60.9898684,82.2147619 61.8642751,81.3968559 61.8642751,80.1972603 C61.8642751,78.9431377 61.1538197,78.3433399 59.9515104,78.2342858 C58.8038516,78.1252316 57.8747945,79.0521918 57.8747945,80.1972603 C57.8747945,81.3968559 58.6945508,82.2147619 59.7875592,82.2147619\"fill=\"#0A0B09\"></path>\n                          <path d=\"M77.3303439,82.2147619 C78.4233523,82.2147619 79.297759,81.2878017 79.2431086,80.0882062 C79.1884582,78.9976648 78.3140514,78.2342858 77.221043,78.2342858 C76.0733842,78.2888128 75.3082784,79.0521918 75.3082784,80.1972603 C75.3082784,81.3968559 76.1280347,82.2147619 77.3303439,82.2147619\" fill=\"#0A0B09\"></path>\n                          <path d=\"M86.2930127,73.3813764 C87.3313707,73.3813764 88.3697287,72.3998892 88.3697287,71.4729289 C88.3697287,70.4914417 87.2220699,69.4009002 86.2383623,69.4009002 C85.3093052,69.4554273 84.3255976,70.4369146 84.3255976,71.4729289 C84.2709472,72.5634704 85.1453539,73.3813764 86.2930127,73.3813764\" fill=\"#0A0B09\"></path>\n                          <path d=\"M51.2620937,73.3813764 C52.3551021,73.4359035 53.2295088,72.5634704 53.2295088,71.4729289 C53.2295088,70.3823875 52.3004517,69.4009002 51.3167441,69.4554273 C50.3330365,69.4554273 49.1853777,70.6004958 49.2946786,71.5819831 C49.4586298,72.6179974 50.1144349,73.3268494 51.2620937,73.3813764\" fill=\"#0A0B09\"></path>\n                          <path d=\"M51.2620937,104.352753 C50.3330365,104.40728 49.2946786,105.497821 49.2946786,106.424781 C49.349329,107.351742 50.387687,108.387756 51.3713945,108.387756 C52.3551021,108.387756 53.2841592,107.351742 53.2841592,106.315727 C53.2295088,105.279713 52.2458012,104.298226 51.2620937,104.352753\" fill=\"#0A0B09\"></path>\n                          <path d=\"M50.9341912,121.092564 C22.8438754,121.092564 0,98.3002479 0,70.2733334 C0,42.2464189 22.8438754,19.4541032 50.9341912,19.4541032 C79.0245069,19.4541032 101.868382,42.2464189 101.868382,70.2733334 C101.813732,98.3002479 79.0245069,121.092564 50.9341912,121.092564 Z M50.9341912,25.6156622 C26.2322015,25.6156622 6.12084701,45.6816243 6.12084701,70.3278605 C6.12084701,94.9740966 26.2322015,115.040059 50.9341912,115.040059 C75.6361809,115.040059 95.7475353,94.9740966 95.7475353,70.3278605 C95.7475353,45.6816243 75.6361809,25.6156622 50.9341912,25.6156622 L50.9341912,25.6156622 Z\" fill=\"#0A0B09\"></path>\n                          <path d=\"M112.03336,99.4998435 L112.03336,99.4998435 C109.901994,98.6819374 108.808986,96.3372733 109.464791,94.2107176 C110.885702,89.4668624 113.071718,80.688004 113.23567,70.5459687 C113.563572,50.6435878 106.459018,34.8852643 92.0859572,23.7617418 C62.7386818,0.91489901 33.7739594,9.80281159 23.9915343,13.8923419 C21.9694687,14.7647751 19.6195007,13.946869 18.5264923,12.0384215 C17.2148822,9.74828452 18.1985898,6.85834975 20.6032082,5.87686248 C24.9752418,4.02294206 32.298398,1.51469679 41.5889694,0.478682442 C55.4155256,-1.10260262 76.3466363,0.478682442 97.4963488,16.9458579 C114.000776,29.7597196 122.471591,48.462505 121.979737,71.0367124 C121.761135,82.1057078 119.465817,91.5388911 117.880955,96.7734899 C117.115849,99.172681 114.437979,100.481331 112.03336,99.4998435\" fill=\"#F9D839\"></path>\n                      </g>\n                      <path d=\"M32.9739115,87 C31.7692102,87 30.9478229,87.9061302 31.0025821,89.0254675 C31.0573412,90.1981067 31.9882468,91.0509351 33.0834298,90.9976333 C34.2333719,90.9443315 35,90.0382013 35,88.8655622 C34.9452409,87.7995267 34.0690945,87 32.9739115,87\" fill=\"#0A0B09\"></path>\n                      <path d=\"M7.05743607,61.0094907 C5.97964559,60.9033163 5.1174132,61.6996242 5.00963415,62.8144552 C4.90185511,63.9292863 5.71019797,64.8848557 6.84187797,64.9910301 C7.97355797,65.0972045 8.9435694,64.2478094 8.99745893,63.1329784 C9.05134845,61.9650602 8.24300559,61.0625779 7.05743607,61.0094907\" fill=\"#0A0B09\"></path>\n                      <path d=\"M41.8185346,29.9910148 C42.9625326,30.0973705 43.9431022,29.2465247 43.9975783,28.1297895 C44.0520544,27.0130543 43.1804369,26.0558527 42.0909151,26.0026749 C41.0013932,25.949497 40.1297757,26.6939871 40.0208235,27.8107223 C39.8573953,28.9806353 40.6745367,29.884659 41.8185346,29.9910148\" fill=\"#0A0B09\"></path>\n                      <path d=\"M76,30 C75.6521739,29.6428571 75.3478261,29.2857143 75,29 C75.2173913,29.5 75.5217391,29.8571429 76,30\" id=\"Fill-876\" fill=\"#0A0B09\"></path>\n                      <path d=\"M16.0540541,87.0021486 C14.972973,87.0021486 14,87.9205739 14,89.0010743 C14,90.0815747 14.972973,91 16.0540541,91 C17.1351351,91 17.9459459,90.1896247 18,89.0550993 C18,87.9205739 17.1351351,86.9481236 16.0540541,87.0021486\" fill=\"#0A0B09\"></path>\n                      <path d=\"M32.9714037,52 C31.8761794,52 31.0547612,52.799497 31,53.9187928 C31,55.0380886 31.8761794,55.9441853 32.9714037,55.9974851 C34.0666279,56.0507849 34.9428073,55.2512879 34.9975685,54.131992 C35.0523297,52.9060966 34.1761503,52 32.9714037,52\" fill=\"#0A0B09\"></path>\n                      <path d=\"M58.9726027,26 C57.8219178,26 57,26.8648649 57,28.0540541 C57,29.1351351 57.8767123,30 58.9726027,30 C60.1232877,30 61,29.1351351 61,28 C61,26.8648649 60.1232877,26 58.9726027,26\" fill=\"#0A0B09\"></path>\n                      <path d=\"M7.10924327,78.0027925 C5.92076762,77.9472757 5.00240006,78.7245105 5.00240006,79.8903627 C4.94837844,81.1117317 5.81272437,82 6.94717841,82 C8.13565407,82 9,81.1672484 9,80.0013963 C9,78.9465776 8.18967569,78.0583093 7.10924327,78.0027925\" fill=\"#0A0B09\"></path>\n                      <path d=\"M85.7604769,52.0083387 C84.7483181,52.0629837 83.9492454,53.1012377 84.002517,54.1394917 C84.0557885,55.2323906 84.9614042,56.0520648 86.0268344,55.9974199 C87.0922647,55.9427749 88.0511519,54.9591659 87.9978804,53.8662669 C87.9446089,52.8826579 86.8259071,51.8990489 85.7604769,52.0083387\" fill=\"#0A0B09\"></path>\n                      <path d=\"M16.0566884,56 C17.1671522,56 18,55.1369103 18,54.004105 C18,52.8712997 17.0561058,51.9003237 15.945642,52.0082099 C14.779655,52.1700392 14.0023304,52.7094703 14.0023304,54.004105 C13.9468072,55.1369103 14.8907014,56 16.0566884,56\" fill=\"#0A0B09\"></path>\n                      <path d=\"M24.9178082,95 C23.8219178,95 23.0547945,95.8108108 23,97 C23,98.1351351 23.7671233,99 24.8630137,99 C26.0136986,99 27,98.0810811 27,97.0540541 C27,95.9189189 26.0684932,95 24.9178082,95\" fill=\"#0A0B09\"></path>\n                      <path d=\"M24.9167056,65 C26.011966,65 26.9429373,64.1896486 26.9977003,63.10918 C27.0524633,62.0287114 26.121492,61.0022663 25.0262317,61.0022663 C23.8762083,60.9482428 23,61.8666411 23,63.0551566 C23,64.1356251 23.8214453,65 24.9167056,65\" fill=\"#0A0B09\"></path>\n                      <path d=\"M67.9713294,38 C69.1212715,38 69.9426588,37.2777778 69.9974179,36.1111111 C70.0521771,34.8333333 69.2307898,34 68.0260885,34 C66.8761464,34 66,34.8888889 66,36.0555556 C66,37.1666667 66.8761464,38 67.9713294,38\" fill=\"#0A0B09\"></path>\n                      <path d=\"M24.8348471,81.9977015 C26.0006987,82.0524645 26.9444833,81.121493 27,79.9714692 C27,78.9309716 26.1117321,78.054763 25.0013973,78 C23.8355457,78 23.0027946,78.8214455 23.0027946,79.9167062 C22.9472779,81.176256 23.7245123,81.9977015 24.8348471,81.9977015\" fill=\"#0A0B09\"></path>\n                      <path d=\"M18,35.8609806 C18,35.5165884 17.9411765,35.2295948 17.7647059,35 C16.8235294,35.9183793 15.8823529,36.8367586 15,37.8125366 C15.2941176,37.927334 15.6470588,38.0421314 16,37.9847327 C17.1176471,37.927334 18,36.951556 18,35.8609806\" fill=\"#0A0B09\"></path>\n                      <path d=\"M41.9715276,43.0025855 C40.7667052,43.0025855 40,43.769213 40,44.9191541 C40,46.0690953 40.8762345,47 42.0262923,47 C43.0668208,47 44.0525846,45.9595771 43.9978199,44.864395 C43.9978199,43.769213 43.1215854,42.9478264 41.9715276,43.0025855\" fill=\"#0A0B09\"></path>\n                      <path d=\"M58.8902706,47 C60.0006545,47 61,46.0684932 61,44.9178082 C61,43.7671233 60.2227313,43 59.001309,43 C57.7798867,43 56.9470987,43.7671233 57.0026179,44.9178082 C56.9470987,46.0684932 57.8354058,47 58.8902706,47\" fill=\"#0A0B09\"></path>\n                      <path d=\"M33.056829,37.9972457 C34.2227316,37.9424889 35,37.1758939 35,36.0260013 C35,34.8213519 34.1672124,34 32.9457907,34 C31.7798881,34 30.9471005,34.9308654 31.0026197,36.1355148 C31.0026197,37.2854074 31.8909264,38.0520025 33.056829,37.9972457\" fill=\"#0A0B09\"></path>\n                      <path d=\"M86.1028763,38 C86.4019176,38 86.7009588,37.9411765 87,37.8235294 C86.1028763,36.8235294 85.2057527,35.8823529 84.2488208,35 C84.1292043,35.2352941 84.069396,35.5294118 84.0095878,35.8823529 C83.8899713,37 84.9067114,38 86.1028763,38\" fill=\"#0A0B09\"></path>\n                      <path d=\"M77.0003276,46.9975336 C78.1099623,46.9975336 79.0531518,45.9433659 78.9976701,44.8337157 C78.9421884,43.7240655 78.0544806,42.9473104 76.8893641,43.0027929 C75.6687658,43.0582754 74.9475033,43.8350305 75.002985,45.0556457 C75.0584667,46.1652959 75.9461745,47.0530161 77.0003276,46.9975336\" fill=\"#0A0B09\"></path>\n                      <path d=\"M34.9975687,71.1606105 C35.0522945,69.9418046 34.176681,69 33.0274384,69 C31.9876474,69 31.1120339,69.8864043 31.0025822,70.9944097 C30.9478564,72.1024151 31.768744,72.9888194 32.9179867,72.9888194 C34.1219552,73.09962 34.9428428,72.3794165 34.9975687,71.1606105\" fill=\"#0A0B09\"></path>\n                      <path d=\"M15.9214478,72.9972069 C17.0687776,73.052693 17.9429336,72.2758878 17.9975684,71.1661661 C18.0522031,70.0564444 17.1780471,69.0576949 16.1946215,69.0022088 C15.1565612,68.9467227 14.0092314,69.9454722 14.0092314,70.9997079 C13.8999619,72.0539435 14.7741179,72.9417208 15.9214478,72.9972069\" fill=\"#0A0B09\"></path>\n                      <path d=\"M24.9178082,47 C25.9589041,47 27,45.9444444 27,44.8888889 C27,43.8333333 26.1232877,43 24.9178082,43 C23.7123288,43 23.0547945,43.6111111 23,44.7777778 C23,46 23.8219178,47 24.9178082,47\" fill=\"#0A0B09\"></path>\n                      <path d=\"M33.0284187,104 C31.9878618,104 30.947305,105.027027 31.0020712,106.108108 C31.0568373,107.135135 31.9878618,108 33.0831848,108 C34.1785078,108 35,107.135135 35,106 C35,104.918919 34.0689755,104 33.0284187,104\" fill=\"#0A0B09\"></path>\n                      <path d=\"M50.9988342,38 C52.1092976,38 53.0531915,37.1785545 52.9976684,36.0832938 C52.9421452,34.9332701 52.4424366,34.1118246 51.1098805,34.0022985 C49.9994171,33.9475355 49,34.878507 49,36.0285308 C49,37.0142654 49.9438939,38 50.9988342,38\" fill=\"#0A0B09\"></path>\n                  </g>\n              </g>\n          </g>\n      </svg>\n      <Reward ref={canvasInput} type='emoji' config = {{\"emoji\": DonutSet(), \"elementCount\": 1, \"spread\": 10, \"decay\": .91, \"elementSize\": 80}}></Reward>\n    </div>\n  )\n}\n","import { useContext, useRef, useEffect } from \"react\";\nimport Reward from '../Reward/Reward.js';\nimport { FruitSet2 } from \"../Reward/MemphisSets\";\nimport handleViewport from 'react-in-viewport';\n\n\nexport default function Sun3(props) {\n  const styles = {\n    width: \"100px\",\n    height: \"100px\",\n    position: \"absolute\",\n    top: \"2%\",\n    left: \"40%\"\n  }\n  const canvasInput = useRef(null);\n  function confetti(){\n    canvasInput.current.rewardMe();\n  }\n\n  /*useEffect(() => {\n    const interval = setInterval(() => {\n      canvasInput.current.rewardMe();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);*/\n\n  const Block = (props: { inViewport: boolean }) => {\n    const { inViewport, forwardedRef } = props;\n    const color = inViewport ? '#217ac0' : '#ff9800';\n    const text = inViewport ? 'In viewport' : 'Not in viewport';\n    return (\n      <div className=\"viewport-block\" ref={forwardedRef}>\n        <h3>{ text }</h3>\n      </div>\n    );\n  };\n  const randomSize = [1, 5, 2, 10];\n  const ViewportBlock = handleViewport(Block, /** options: {}, config: {} **/);\n\n  return (\n    <div className=\"hover-rotate\" onClick={()=>confetti()}style={styles}>\n      <svg viewBox=\"0 0 88 48\">\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(-324.000000, -405.000000)\">\n                  <g transform=\"translate(324.000000, 405.000000)\">\n                      <path d=\"M85.39814,5.00609647 C84.0014292,4.97306805 82.8095625,6.0218474 82.6862483,7.41005727 C80.9730992,26.79215 64.7155078,42.2215032 44.9643558,42.6803441 C23.9449028,43.1681485 6.60703881,26.9852392 5.31580744,6.46036318 C5.22816269,5.07266144 4.05718807,4 2.66353464,4 C1.11599334,4 -0.0931984702,5.31097418 0.00565665424,6.85009853 C1.50020346,30.1676545 21.2044757,48.5426345 45.0912369,47.9877571 C67.5410318,47.4664162 86.0238827,29.9379799 87.9892653,7.91259737 C88.125828,6.3780462 86.9426239,5.04268179 85.39814,5.00609647\" id=\"Fill-9\" fill=\"#E26141\"></path>\n                      <path d=\"M55,12 C55,5.37261875 49.6278893,0 43,0 C36.3726187,0 31,5.37261875 31,12 C31,18.6273813 36.3726187,24 43,24 C49.6278893,24 55,18.6273813 55,12\" fill=\"#F4C3AE\"></path>\n                  </g>\n              </g>\n          </g>\n      </svg>\n      {\n        /*\n        <ViewportBlock onEnterViewport={() => {setTimeout(() => {\n          confetti();\n        }, 1000)}} onLeaveViewport={() => console.log('leave')} />\n        */\n      }\n\n\n      <Reward ref={canvasInput} type='emoji' config = {{\"emoji\": FruitSet2(), \"elementCount\": 1, \"spread\": 50, \"decay\": 0.91, \"elementSize\": 80}}></Reward>\n    </div>\n  )\n}\n","import { Link } from 'react-router-dom';\n\nexport default function Logo(props) {\n  const color = props.color;\n  const bg = props.bg;\n  const styles = {\n    color: color,\n    background: props.bg\n  }\n  return (\n    <div style={styles} className=\"text-base p-2 m-4 z-30 logo flex absolute items-center justify-center\">\n      <Link to=\"/\"><span>/// Logo ///</span></Link>\n    </div>\n  )\n}\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { MouseContext } from \"./../context/mouse-context\";\nimport Reward from './Reward/Reward.js';\nimport { DonutSet, IceCreamSet, TwitchSet, DefaultSet, FruitSet2, BallonSet } from \"./Reward/MemphisSets\";\nimport DotRing from \"./DotRing/DotRing\";\nimport Sun2 from './shapes/Sun2';\nimport Wave from './shapes/Wave';\nimport Wave2 from './shapes/Wave2';\nimport Shapes from './shapes/Shapes.js';\nimport Sun3 from './shapes/Sun3';\nimport { useSpring, animated } from 'react-spring';\nimport Logo from '../components/Logo';\n\nexport default function HomeHead(props) {\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n  const styles = {\n    padding: \"40px\",\n    border: \"1px solid\",\n    boxShadow: \"-10px 10px blue\",\n    backgroundColor: \"#fdee21\",\n    color: \"blue\"\n  }\n  const styleRight = {\n    padding: \"40px\",\n    height: \"250px\"\n  }\n\n  const randomBg = [\"dot-bg\", \"line-bg\", \"box-bg\", \"skew-dot-bg\", \"cross-bg\", \"line-h-bg\"];\n\n  const canvasInput = useRef(null);\n  function confetti(){\n    canvasInput.current.rewardMe();\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      confetti();\n    }, 1000)\n  }, [])\n\n  const calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\n  const trans1 = (x, y) => `rotate(130deg) translate3d(${x / 60}px,${y / 10}px,0)`\n  const trans2 = (x, y) => `translate3d(${-x / 8 + 35}px,${y / 8 - 230}px,0)`\n  const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${-y / 6 - 200}px,0)`\n  const trans4 = (x, y) => `translate3d(${x / 3.5}px,${-y / 3.5}px,0)`\n  const trans5 = (x, y) => `translate3d(${-x / 60}px,${y / 60}px,0)`\n  const [props1, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n\n  return (\n    <main onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })} className=\"h-screen w-screen p-8 flex justify-items-center items-center\">\n      <Logo color=\"var(--blue)\" />\n      <animated.div onClick={()=>confetti()} style={{ transform: props1.xy.interpolate(trans1) }} className=\"cannon absolute z-20 w-screen\">\n        <img src=\"/img/cannon.svg\" />\n        <Reward ref={canvasInput} type='emoji' config = {{\"emoji\": BallonSet(), \"elementCount\": 5, \"spread\": 1200, \"decay\": 0.6, \"elementSize\": 180, \"lifetime\": 500}}></Reward>\n      </animated.div>\n\n\n      <div className=\"flex-1\" style={styles}>\n        <h2 className=\"text-3xl border-b-2 pb-2\">Interview<br /><input type=\"text\" placeholder=\"Anni Wang\" />and get some FUN.</h2>\n\n        <p>*Questions will be randomly gernerated.</p>\n\n        <div className=\"text-left\">\n          <h4></h4>\n          <div className=\"flex mt-2 space-x-4\">\n            <a href=\"./report\" className=\"border rounded-sm py-3 px-6\" onClick={() => { props.getCategories('basic.json')}}>See demo Interview Report</a><br />\n          </div>\n        </div>\n        <Wave />\n        <animated.div style={{ transform: props1.xy.interpolate(trans5)}}>\n          <Sun2 size=\"100px\" />\n        </animated.div>\n        <animated.div style={{ transform: props1.xy.interpolate(trans1)}}>\n          <Wave2 size=\"100px\" />\n        </animated.div>\n      </div>\n      <div className=\"flex-1 text-2xl\" >\n        <div className={`text-left ${randomBg[Math.floor(Math.random()*6)]}`} style={styleRight}>\n          <span className=\"p-3 my-3 bg-white leading-normal\">Anni Wang is an UX Engineer, a Design Technologist. </span><br />\n          <span className=\"p-1 mx-4 bg-white\">a designer and coder</span>\n          <span className=\"p-2 mx-4 bg-white\">,a prototyper.</span><br /><br /><br />\n        </div>\n      </div>\n    </main>\n  )\n}\n","export default function Arrow(props) {\n  const size = props.size;\n  const deg = props.rotate;\n  const styles = {\n    \"width\": size,\n    \"height\": size,\n    \"transform\": \"rotate(\"+ deg +\")\"\n  }\n  return (\n    <div className=\"float-left\">\n      <svg style={styles} viewBox=\"0 0 117.25 86.75\">\n        <path style={{\"stroke\": \"white\"}} className=\"arrow-cursor__path\" d=\"M111.45,42.5,74.65,5.7l-9.9,9.9,20.6,20.6H6.45v14h78.9L64.75,70.8l9.9,9.9,36.8-36.8A1,1,0,0,0,111.45,42.5Z\" />\n      </svg>\n    </div>\n  )\n}\n","export default function FlickHand(props) {\n  const color = props.color;\n  const size = props.size;\n  const styles = {\n    \"width\": size,\n    \"height\": size,\n    \"fill\": color\n  }\n  return (\n    <div>\n      <svg className=\"shake\" style={styles} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\">\n        <path className=\"hand-x\" d=\"M139.93,113.56l-41.12-6.93V76.08a9.25,9.25,0,0,0-9.25-9.25h0a9.25,9.25,0,0,0-9.25,9.25v57.36L71,122.65c-3.61-3.61-8.44-3.89-13.08,0,0,0-7.24,5.84-3.83,9.25l34,34h42.63a9.25,9.25,0,0,0,9.07-7.43l6.82-34.09A9.28,9.28,0,0,0,139.93,113.56Z\"/>\n        <g className=\"swipe-horizontal\">\n          <path className=\"line-horizontal\" d=\"M70.85,42c19.69-12.46,37,0,37,0\"/>\n          <polyline className=\"arrow-left\" points=\"76.6 46.01 68.37 43.43 68.38 43.41 70.96 35.18\"/>\n          <polyline className=\"arrow-right\" points=\"100.21 44.66 108.43 42.08 108.43 42.06 105.85 33.84\"/>\n        </g>\n      </svg>\n    </div>\n  )\n}\n","import { useState } from \"react\";\n\nconst getItem = key =>\n  document.cookie.split(\"; \").reduce((total, currentCookie) => {\n    const item = currentCookie.split(\"=\");\n    const storedKey = item[0];\n    const storedValue = item[1];\n\n    return key === storedKey ? decodeURIComponent(storedValue) : total;\n  }, \"\");\n\nconst setItem = (key, value, numberOfDays) => {\n  const now = new Date();\n\n  // set the time to be now + numberOfDays\n  now.setTime(now.getTime() + numberOfDays * 60 * 60 * 24 * 1000);\n\n  document.cookie = `${key}=${value}; expires=${now.toUTCString()}; path=/`;\n};\n\n/**\n *\n * @param {String} key The key to store our data to\n * @param {String} defaultValue The default value to return in case the cookie doesn't exist\n */\nconst useCookie = (key, defaultValue) => {\n  const getCookie = () => getItem(key) || defaultValue;\n  const [cookie, setCookie] = useState(getCookie());\n\n  const updateCookie = (value, numberOfDays) => {\n    setCookie(value);\n    setItem(key, value, numberOfDays);\n  };\n\n  return [cookie, updateCookie];\n};\n\nexport default useCookie;\n","export default function getRandomDifferent(arr, last) {\n  if (arr.length === 0) {\n    return;\n  } else if (arr.length === 1) {\n    return arr[0];\n  } else {\n    let num = 0;\n    do {\n      num = Math.floor(Math.random() * arr.length);\n    } while (arr[num] === last);\n    return arr[num];\n  }\n}\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { useSpring, useSprings, useTrail, animated, to as interpolate } from 'react-spring';\nimport Smile from \"../components/shapes/Smile\";\nimport Sad from \"../components/shapes/Sad\";\n\nexport default function RewardAnswers(props) {\n  //const answers = props.answers;\n  const userAnswers = props.userAnswers;\n  const length = userAnswers.length;\n  const config = { mass: 5, tension: 2000, friction: 200 };\n\n  const [toggle, set1] = useState(true);\n  const trail = useTrail(length, {\n    config,\n    opacity: toggle ? 1 : 0,\n    x: toggle ? 0 : 20,\n    height: toggle ? 80 : 0,\n    from: { opacity: 0, x: 20, height: 0 }\n  });\n  let gridRows;\n\n  switch(userAnswers.length) {\n    case 1:\n      gridRows = \"grid-rows-1\";\n      break;\n    case 2:\n      gridRows = \"grid-rows-2\";\n      break;\n    case 3:\n      gridRows = \"grid-rows-3\";\n      break;\n    default:\n      gridRows = \"grid-rows-4\";\n\n  }\n  return (\n    <div className=\"flex flex-cols\">\n      <div className={`grid ${gridRows} grid-flow-col gap-4`}>\n        {\n          trail.map(({ x, height, ...rest }, index) => (\n          <animated.div\n            key={index}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: x.interpolate(x => `translate3d(0,${x}px,0)`)\n            }}\n          >\n            <animated.div style={{ height }} className=\"flex flex-rows items-center\">\n              <span>{index+1}.</span>\n              {\n                userAnswers.length !=0 && userAnswers[index] ==1 ?<Smile size=\"30px\" color=\"#fff\" opacity=\"1\" key={index} />: <Sad size=\"30px\" color=\"#fff\" opacity=\"1\" key={index} />\n              }\n            </animated.div>\n          </animated.div>\n        ))\n       }\n      </div>\n    </div>\n  )\n}\n","\nexport default function Restart(props) {\n  const size = props.size;\n  const styles = {\n    width: size,\n    height: size\n  }\n\n  return (\n    <svg style={styles} className=\"restart\" fill=\"#fff\" viewBox=\"0 0 80 80\" width=\"80px\" height=\"80px\">\n      <path d=\"M 39 7.023438 L 39 9.039063 C 39.316406 9.027344 39.632813 9.007813 39.949219 9.007813 C 50.667969 9.007813 61.109375 14.570313 66.84375 24.5 C 70.988281 31.671875 72.085938 40.027344 69.941406 48.023438 C 67.800781 56.023438 62.671875 62.707031 55.5 66.847656 C 40.695313 75.394531 21.699219 70.300781 13.152344 55.5 C 9.011719 48.328125 7.914063 39.972656 10.054688 31.976563 C 10.980469 28.519531 12.480469 25.3125 14.449219 22.449219 L 19 27 L 22 13 L 8 16 L 13.003906 21.003906 C 10.804688 24.132813 9.144531 27.652344 8.125 31.457031 C 5.84375 39.972656 7.011719 48.867188 11.421875 56.5 C 17.523438 67.074219 28.640625 72.992188 40.054688 72.992188 C 45.648438 72.992188 51.316406 71.570313 56.5 68.578125 C 64.132813 64.171875 69.59375 57.054688 71.875 48.542969 C 74.15625 40.027344 72.984375 31.132813 68.578125 23.5 C 62.304688 12.632813 50.742188 6.6875 39 7.023438 Z M 40 12 C 39.449219 12 39 12.449219 39 13 C 39 13.550781 39.449219 14 40 14 C 40.550781 14 41 13.550781 41 13 C 41 12.449219 40.550781 12 40 12 Z M 45.292969 12.515625 C 44.804688 12.503906 44.382813 12.84375 44.285156 13.324219 C 44.179688 13.863281 44.53125 14.390625 45.074219 14.5 C 45.613281 14.605469 46.140625 14.253906 46.25 13.714844 C 46.355469 13.171875 46.003906 12.644531 45.464844 12.535156 C 45.40625 12.527344 45.351563 12.519531 45.292969 12.515625 Z M 50.355469 14.054688 C 49.941406 14.046875 49.566406 14.289063 49.40625 14.671875 C 49.195313 15.183594 49.4375 15.765625 49.949219 15.980469 C 50.460938 16.191406 51.042969 15.949219 51.253906 15.4375 C 51.46875 14.925781 51.226563 14.34375 50.714844 14.128906 C 50.601563 14.082031 50.476563 14.058594 50.355469 14.054688 Z M 55.015625 16.546875 C 54.675781 16.542969 54.355469 16.710938 54.167969 16.996094 C 53.859375 17.453125 53.984375 18.074219 54.441406 18.378906 C 54.902344 18.6875 55.523438 18.5625 55.828125 18.105469 C 55.976563 17.886719 56.03125 17.613281 55.980469 17.355469 C 55.929688 17.09375 55.777344 16.863281 55.554688 16.71875 C 55.394531 16.609375 55.210938 16.550781 55.015625 16.546875 Z M 59.105469 19.90625 C 58.835938 19.90625 58.574219 20.011719 58.386719 20.203125 C 57.996094 20.589844 57.996094 21.226563 58.386719 21.613281 C 58.773438 22.003906 59.410156 22.003906 59.796875 21.613281 C 60.1875 21.226563 60.1875 20.589844 59.796875 20.203125 C 59.613281 20.015625 59.367188 19.910156 59.105469 19.90625 Z M 62.460938 24 C 62.257813 23.996094 62.0625 24.054688 61.894531 24.167969 C 61.4375 24.472656 61.3125 25.09375 61.621094 25.550781 C 61.925781 26.011719 62.546875 26.136719 63.003906 25.828125 C 63.464844 25.519531 63.589844 24.902344 63.28125 24.441406 C 63.097656 24.167969 62.789063 24 62.460938 24 Z M 64.953125 28.667969 C 64.820313 28.664063 64.6875 28.691406 64.5625 28.742188 C 64.050781 28.953125 63.808594 29.539063 64.019531 30.046875 C 64.234375 30.558594 64.816406 30.800781 65.328125 30.589844 C 65.839844 30.378906 66.082031 29.792969 65.871094 29.28125 C 65.714844 28.914063 65.355469 28.667969 64.953125 28.667969 Z M 15.078125 28.667969 C 14.664063 28.660156 14.289063 28.902344 14.132813 29.285156 C 13.921875 29.796875 14.164063 30.378906 14.671875 30.59375 C 15.183594 30.804688 15.769531 30.5625 15.980469 30.050781 C 16.191406 29.539063 15.949219 28.957031 15.4375 28.746094 C 15.324219 28.695313 15.203125 28.671875 15.078125 28.667969 Z M 66.484375 33.734375 C 66.417969 33.730469 66.351563 33.738281 66.285156 33.75 C 65.746094 33.859375 65.394531 34.386719 65.5 34.925781 C 65.609375 35.46875 66.136719 35.820313 66.675781 35.714844 C 67.21875 35.605469 67.570313 35.078125 67.464844 34.535156 C 67.371094 34.070313 66.960938 33.734375 66.484375 33.734375 Z M 13.546875 33.734375 C 13.058594 33.722656 12.636719 34.058594 12.539063 34.535156 C 12.488281 34.796875 12.539063 35.070313 12.6875 35.289063 C 12.835938 35.511719 13.066406 35.664063 13.328125 35.714844 C 13.585938 35.765625 13.855469 35.710938 14.078125 35.566406 C 14.296875 35.417969 14.449219 35.1875 14.5 34.925781 C 14.609375 34.386719 14.257813 33.859375 13.71875 33.75 C 13.660156 33.742188 13.605469 33.734375 13.546875 33.734375 Z M 13 39 C 12.449219 39 12 39.449219 12 40 C 12 40.550781 12.449219 41 13 41 C 13.550781 41 14 40.550781 14 40 C 14 39.449219 13.550781 39 13 39 Z M 67 39 C 66.449219 39 66 39.449219 66 40 C 66 40.550781 66.449219 41 67 41 C 67.550781 41 68 40.550781 68 40 C 68 39.449219 67.550781 39 67 39 Z M 13.523438 44.265625 C 13.457031 44.265625 13.390625 44.273438 13.324219 44.285156 C 12.78125 44.394531 12.429688 44.921875 12.539063 45.464844 C 12.648438 46.003906 13.171875 46.355469 13.714844 46.25 C 14.257813 46.140625 14.609375 45.613281 14.5 45.074219 C 14.40625 44.605469 14 44.269531 13.523438 44.265625 Z M 66.507813 44.265625 C 66.019531 44.253906 65.597656 44.59375 65.5 45.074219 C 65.394531 45.613281 65.746094 46.140625 66.285156 46.25 C 66.828125 46.355469 67.355469 46.003906 67.464844 45.464844 C 67.570313 44.921875 67.21875 44.394531 66.675781 44.285156 C 66.621094 44.277344 66.566406 44.269531 66.507813 44.265625 Z M 64.96875 49.328125 C 64.554688 49.320313 64.179688 49.566406 64.019531 49.949219 C 63.808594 50.457031 64.050781 51.042969 64.5625 51.253906 C 65.074219 51.464844 65.65625 51.222656 65.871094 50.714844 C 66.082031 50.203125 65.839844 49.617188 65.328125 49.40625 C 65.214844 49.359375 65.089844 49.332031 64.96875 49.328125 Z M 15.0625 49.332031 C 14.929688 49.332031 14.796875 49.355469 14.671875 49.40625 C 14.429688 49.507813 14.234375 49.703125 14.132813 49.949219 C 14.03125 50.195313 14.03125 50.46875 14.128906 50.714844 C 14.34375 51.226563 14.925781 51.46875 15.4375 51.253906 C 15.683594 51.15625 15.878906 50.960938 15.980469 50.714844 C 16.082031 50.46875 16.082031 50.195313 15.980469 49.949219 C 15.828125 49.578125 15.464844 49.335938 15.0625 49.332031 Z M 62.46875 54 C 62.128906 53.992188 61.808594 54.160156 61.621094 54.441406 C 61.3125 54.902344 61.4375 55.519531 61.894531 55.828125 C 62.113281 55.976563 62.386719 56.03125 62.644531 55.976563 C 62.90625 55.925781 63.136719 55.773438 63.28125 55.550781 C 63.589844 55.09375 63.464844 54.472656 63.003906 54.167969 C 62.847656 54.058594 62.660156 54 62.46875 54 Z M 17.5625 54 C 17.359375 53.996094 17.164063 54.054688 16.996094 54.167969 C 16.539063 54.476563 16.414063 55.09375 16.71875 55.554688 C 17.027344 56.011719 17.648438 56.136719 18.109375 55.828125 C 18.566406 55.523438 18.691406 54.902344 18.382813 54.441406 C 18.199219 54.167969 17.890625 54.003906 17.5625 54 Z M 20.921875 58.09375 C 20.652344 58.089844 20.390625 58.195313 20.203125 58.386719 C 19.8125 58.773438 19.8125 59.410156 20.203125 59.796875 C 20.589844 60.1875 21.226563 60.1875 21.613281 59.796875 C 22.003906 59.410156 22.003906 58.773438 21.613281 58.386719 C 21.429688 58.199219 21.183594 58.09375 20.921875 58.09375 Z M 59.105469 58.09375 C 58.835938 58.089844 58.574219 58.195313 58.386719 58.386719 C 57.996094 58.773438 57.996094 59.410156 58.386719 59.796875 C 58.773438 60.1875 59.410156 60.1875 59.796875 59.796875 C 60.1875 59.410156 60.1875 58.773438 59.796875 58.386719 C 59.613281 58.199219 59.367188 58.09375 59.105469 58.09375 Z M 25.019531 61.449219 C 24.679688 61.441406 24.359375 61.609375 24.171875 61.890625 C 23.863281 62.351563 23.988281 62.972656 24.449219 63.28125 C 24.90625 63.585938 25.527344 63.460938 25.832031 63.003906 C 26.140625 62.542969 26.015625 61.925781 25.558594 61.617188 C 25.398438 61.511719 25.210938 61.449219 25.019531 61.449219 Z M 55.011719 61.449219 C 54.808594 61.445313 54.613281 61.503906 54.445313 61.613281 C 54.222656 61.761719 54.070313 61.992188 54.019531 62.253906 C 53.96875 62.511719 54.023438 62.785156 54.171875 63.003906 C 54.476563 63.460938 55.097656 63.585938 55.558594 63.28125 C 56.015625 62.972656 56.140625 62.351563 55.832031 61.890625 C 55.652344 61.617188 55.34375 61.449219 55.011719 61.449219 Z M 29.691406 63.941406 C 29.277344 63.933594 28.902344 64.179688 28.746094 64.5625 C 28.535156 65.070313 28.777344 65.65625 29.285156 65.867188 C 29.796875 66.078125 30.382813 65.835938 30.59375 65.328125 C 30.804688 64.816406 30.5625 64.230469 30.050781 64.019531 C 29.9375 63.972656 29.816406 63.945313 29.691406 63.941406 Z M 50.339844 63.941406 C 50.207031 63.941406 50.074219 63.96875 49.953125 64.019531 C 49.707031 64.121094 49.511719 64.316406 49.410156 64.558594 C 49.308594 64.804688 49.308594 65.082031 49.40625 65.328125 C 49.621094 65.835938 50.203125 66.078125 50.714844 65.867188 C 50.960938 65.765625 51.15625 65.570313 51.257813 65.328125 C 51.359375 65.082031 51.359375 64.804688 51.257813 64.5625 C 51.105469 64.1875 50.742188 63.945313 50.339844 63.941406 Z M 34.761719 65.480469 C 34.273438 65.46875 33.847656 65.808594 33.753906 66.285156 C 33.644531 66.828125 33.996094 67.351563 34.539063 67.460938 C 35.082031 67.570313 35.605469 67.21875 35.714844 66.675781 C 35.824219 66.132813 35.472656 65.609375 34.929688 65.5 C 34.875 65.488281 34.816406 65.480469 34.761719 65.480469 Z M 45.269531 65.484375 C 45.203125 65.480469 45.136719 65.488281 45.074219 65.5 C 44.53125 65.609375 44.179688 66.132813 44.285156 66.675781 C 44.339844 66.9375 44.492188 67.164063 44.710938 67.3125 C 44.933594 67.460938 45.203125 67.515625 45.464844 67.464844 C 45.722656 67.410156 45.953125 67.257813 46.101563 67.039063 C 46.246094 66.816406 46.300781 66.546875 46.25 66.285156 C 46.15625 65.820313 45.746094 65.484375 45.269531 65.484375 Z M 40 66 C 39.449219 66 39 66.449219 39 67 C 39 67.550781 39.449219 68 40 68 C 40.550781 68 41 67.550781 41 67 C 41 66.449219 40.550781 66 40 66 Z\"/></svg>\n  )\n}\n","function shuffle(array) {\n  var currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\nconst GradeASet = () => {\n  const arr = [\n    '/img/gradeA/1.svg',\n    '/img/gradeA/2.svg',\n    '/img/gradeA/3.svg',\n    '/img/gradeA/4.svg'\n  ]\n  return shuffle(arr);\n};\n\nexport { GradeASet }\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport Reward from '../components/Reward/Reward';\nimport RewardAnswers from './RewardAnswers';\nimport { DefaultSet, TwitchSet, MemphisSet1, MemphisSet2, IceCreamSet } from \"../components/Reward/MemphisSets\";\nimport {GradeASet} from './GradeASet';\nconst imgSrc = GradeASet()[0];\n\nexport default function GradeA(props) {\n  const answers = props.userAnswers;\n  const gradePercentage = props.gradePercentage;\n  const canvasInput = useRef(null);\n\n  useEffect(()=> {\n    setTimeout(() => {\n      canvasInput.current.rewardMe();\n    }, 300)\n  }, [])\n\n  return (\n    <div className=\"flex items-center justify-center flex-col\">\n      <div className=\"flex flex-rows items-center\">\n        <div className=\"text-8xl mx-4\">\n          {\n            <span>{gradePercentage}</span>\n          }\n        </div>\n        <div className=\"w-96 text-black white-bg\">\n          <div>Nice done. Seems like you like Anni's answers pretty much.</div>\n        </div>\n      </div>\n      <div className=\"flex flex-rows\">\n        <RewardAnswers userAnswers={answers} />\n        <img className=\"m-6\" width=\"200px\" src={imgSrc} />\n      </div>\n      <Reward ref={canvasInput} type='emoji' config = {{\"emoji\": DefaultSet(), \"elementCount\": 15, \"elementSize\": 100}}></Reward>\n    </div>\n  )\n}\n","function shuffle(array) {\n  var currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\nconst GradeFSet = () => {\n  const arr = [\n    '/img/gradeF/1.svg',\n    '/img/gradeF/2.svg',\n    '/img/gradeF/3.svg',\n    '/img/gradeF/4.svg',\n    '/img/gradeF/5.svg',\n    '/img/gradeF/6.svg',\n    '/img/gradeF/7.svg',\n    '/img/gradeF/8.svg'\n  ]\n  return shuffle(arr);\n};\n\nexport { GradeFSet }\n","import ReactRain from 'react-rain-animation';\nimport \"react-rain-animation/lib/style.css\";\nimport {GradeFSet} from './GradeFSet';\nconst imgSrc = GradeFSet()[0];\n\nexport default function GradeA(props) {\n  const gradePercentage = props.gradePercentage;\n\n  return (\n    <div className=\"flex items-center justify-center flex-col\">\n      <div className=\"flex flex-rows items-center\">\n        <div className=\"text-8xl mx-4\">\n          {\n            <span>{gradePercentage}</span>\n          }\n        </div>\n        <div className=\"w-96 text-black white-bg\">\n          {\n            <div>Oh no, Seems like you don't like Anni's answers that much.</div>\n          }\n        </div>\n      </div>\n      <img className=\"my-6\" width=\"200px\" src={imgSrc} />\n      <ReactRain numDrops=\"50\" />\n    </div>\n  )\n}\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { useSpring, useSprings, useTrail, animated, to as interpolate } from 'react-spring';\nimport Restart from '../components/shapes/Restart';\nimport GradeA from './GradeA';\nimport GradeF from './GradeF';\n\nexport default function QuestionsDone(props) {\n  const questions = props.questions;\n  const [answers, setAnswers] = useState([]);\n  const index = props.index;\n  const [gradePercentage, setGradePercentage] = useState();\n  const [grade, setGrade] = useState();\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  function redo() {\n    props.redo();\n    props.rightWrongNumReset();\n  }\n  useEffect(()=> {\n    setAnswers(JSON.parse(localStorage.getItem('category'+ index)));\n  }, []);\n\n  useEffect(() => {\n    setGradePercentage(answers.length!==0 && ((answers.reduce(reducer)/questions.length)*100).toFixed(0)+'%');\n    setGrade(answers.length!==0 && (answers.reduce(reducer)/questions.length) > 0.6 ? \"A\": \"F\");\n\n  }, [answers])\n\n  useEffect(() => {\n    const rightNum = answers.length!=0 && answers.reduce(reducer);\n    props.totalRightWrongNum(rightNum, questions.length - rightNum);\n  }, [answers])\n\n  return (\n    <div className=\"w-full h-full absolute flex flex-col items-center justify-center text-3xl text-white\">\n      <div className=\"flex flex-rows\">\n        {\n          grade === \"A\" && <GradeA userAnswers={answers} gradePercentage={gradePercentage} />\n        }\n        {\n          grade === \"F\" && <GradeF userAnswers={answers} gradePercentage={gradePercentage} />\n        }\n      </div>\n      <div className=\"flex items-center z-30 relative\" onClick={() => redo()}>\n        <Restart size=\"80px\" />\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { useSpring, useSprings, useTrail, animated, to as interpolate } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport Restart from '../components/shapes/Restart';\nimport { DefaultSet, TwitchSet, MemphisSet1, MemphisSet2 } from \"../components/Reward/MemphisSets\";\nimport getRandomDifferent from '../getRandomDifferent';\n\nexport default function QuestionsNotDone(data) {\n  const questions = data.questions;\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [rightAnswerNum, setRightAnswerNum] = useState(0);\n  const [wrongAnswerNum, setWrongAnswerNum] = useState(0);\n  const cardsPosArr = [[10, 10], [10, -10], [-10, 10], [-10, -10],[-20,20], [20,20], [-20, -20], [20, -20]];\n  const [cardsPos, setCardsPos] = useState([-10, 10]); // cards initial direction\n  const index = data.index;\n  // These two are just helpers, they curate spring data, propss that are later being interpolated into css\n  const to = (i) => ({ x: i *cardsPos[0], y: i*cardsPos[1], scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\n  const from = (i) => ({ x: 0, y: -1000, rot: 0, scale: 1.5 })\n    // This is being used down there in the view, it interpolates rotation and scale into a css transform\n  const trans = (r, s) => `perspective(0) rotateX(30deg) scale(${s})`\n  const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(questions.length, (i) => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\n    // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  const bind = useDrag(({ args: [index], down, movement: [mx], direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n    set((i) => {\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\n      const isGone = gone.has(index);\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\n      if (dir == -1 && isGone) {\n        data.addWrongNum();\n        setUserAnswers(userAnswers => [...userAnswers,0]);\n      }\n      if (dir == 1 && isGone) {\n        data.addRightNum();\n        setUserAnswers(userAnswers => [...userAnswers,1]);\n      }\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === questions.length) {\n      setTimeout(function(){\n        data.rightWrongNumReset();\n        data.setDone(true);\n      }, 600);\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem('category' + index, JSON.stringify(userAnswers))\n  }, [userAnswers]);\n\n  useEffect(() => {\n    gone.clear() || set((i) => to(i));\n  }, [cardsPos])\n\n  function handleClick(e) {\n    e.stopPropagation()\n  }\n\n\n  return (\n    <div>\n      <div className=\"question-window\">\n        {props.map(({ x, y, rot, scale }, i) => (\n          <animated.div key={i} style={{ x, y }} className=\"flex items-center justify-center absolute w-full h-full\">\n            {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n            <animated.div {...bind(i)} className=\"rainbow-bg\" onClick={handleClick}  style={{ transform: interpolate([rot, scale], trans) }}>\n              <span className=\"p-5 text-3xl bg-white\"><span className=\"text-5xl\">{props.length - i < 10 ? \"0\"+ (props.length - i): props.length - i}</span>.{questions[i].title}</span>\n              <span style={{\"height\": \"200px\"}} className=\"p-5 text-2xl overflow-y-scroll bg-white\">{questions[i].answer}</span>\n            </animated.div>\n          </animated.div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import Smile from '../components/shapes/Smile';\nimport Sad from '../components/shapes/Sad';\n\nexport default function SmileSadFace(props) {\n  const questions = props.questions;\n  const rightAnswerNum = props.rightAnswerNum;\n  const wrongAnswerNum = props.wrongAnswerNum;\n\n  return (\n    <div className=\"flex flex-rols\">\n      <div>\n        {\n          questions.map((item, i) => (\n            i < rightAnswerNum ? <Smile size=\"30px\" color=\"#fff\" opacity=\"1\" key={i} />: <Smile size=\"30px\" color=\"#fff\" opacity=\".5\" key={i} />\n          ))\n        }\n      </div>\n      <div>\n        {\n          questions.map((item, i) => (\n            i < wrongAnswerNum ? <Sad size=\"30px\" color=\"#fff\" opacity=\"1\" key={i} />: <Sad size=\"30px\" color=\"#fff\" opacity=\".5\" key={i} />\n          ))\n        }\n      </div>\n    </div>\n\n  )\n}\n","import React, { useContext } from \"react\";\nimport \"./DotRing.scss\";\nimport useMousePosition from \"../../hooks/useMousePosition\";\nimport { MouseContext } from \"../../context/mouse-context\";\nimport Smile from '../shapes/Smile';\nimport Sad from '../shapes/Sad';\n\nconst MouseLeftRight = () => {\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n  const { x, y } = useMousePosition();\n  return (\n    <>\n      <div className={`arrow-cursor ${cursorType}`} style={{ left: `${x}px`, top: `${y}px` }}>\n\t\t\t\t<svg className=\"arrow-cursor__icon\" viewBox=\"0 0 117.25 86.75\">\n\t\t\t\t\t<path style={{\"stroke\": \"white\"}} className=\"arrow-cursor__path\" d=\"M111.45,42.5,74.65,5.7l-9.9,9.9,20.6,20.6H6.45v14h78.9L64.75,70.8l9.9,9.9,36.8-36.8A1,1,0,0,0,111.45,42.5Z\" />\n\t\t\t\t</svg>\n\t\t\t</div>\n      <div className={`text-sm text-white flex items-center flex-col justify-center smile-cursor ${cursorType}`} style={{ left: `${x}px`, top: `${y}px` }}>\n        {\n          cursorType == \"right\" ? <Smile size=\"100px\" color=\"#fff\" opacity=\"1\" />: <Sad size=\"100px\" color=\"#fff\" opacity=\"1\" />\n        }\n        {\n          cursorType == \"right\" ? <div>Not to bad!</div>: <div>Disagree</div>\n        }\n\n      </div>\n    </>\n  );\n};\n\nexport default MouseLeftRight;\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { useSpring, useSprings, useTrail, animated, to as interpolate } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport Arrow from '../components/shapes/Arrow';\nimport FlickHand from '../components/shapes/FlickHand';\nimport Smile from \"../components/shapes/Smile\";\nimport Sad from \"../components/shapes/Sad\";\nimport { MouseContext } from \"../context/mouse-context\";\nimport useMousePosition from \"../hooks/useMousePosition\";\nimport useCookie from \"../hooks/useCookie\";\nimport getRandomDifferent from '../getRandomDifferent';\nimport Reward from '../components/Reward/Reward';\nimport RewardAnswers from './RewardAnswers';\nimport { DefaultSet, TwitchSet, MemphisSet1, MemphisSet2 } from \"../components/Reward/MemphisSets\";\nimport Restart from '../components/shapes/Restart';\nimport ReactRain from 'react-rain-animation';\nimport \"react-rain-animation/lib/style.css\";\nimport QuestionsDone from './QuestionsDone';\nimport QuestionsNotDone from './QuestionsNotDone';\nimport SmileSadFace from './SmileSadFace';\nimport MouseLeftRight from \"../components/DotRing/MouseLeftRight\";\n\nexport default function Questions(value) {\n  // in question Page...\n  // First step, we get data from parent component, [questions, categoryTitle, categoryIndex and answers from localstorage if questions done.]\n  const answers = value.answers || [];\n  const questions = value.categoryQuestions;\n  const title = value.categoryTitle;\n  const index= value.categoryIndex;\n  const [cookie, updateCookie] = useCookie(\"onboarding\", \"false\"); // make sure onboarding panel only show once.\n  const [done, setDone] = useState(answers && answers.length === questions.length ? true: false);// check if user finished interview for this category\n  const [userAnswers, setUserAnswers] = useState(answers);\n  const [rightAnswerNum, setRightAnswerNum] = useState(0);\n  const [wrongAnswerNum, setWrongAnswerNum] = useState(0);\n\n  const cardsPosArr = [[10, 10], [10, -10], [-10, 10], [-10, -10],[-20,20], [20,20], [-20, -20], [20, -20]];\n  const [cardsPos, setCardsPos] = useState([-10, 10]); // cards initial direction\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n  const { x, y } = useMousePosition();\n  const cursorSide = x > window.innerWidth / 2 ? \"right\" : \"left\";\n\n  function handleClick(e) {\n    // This will prevent any synthetic events from firing after this one\n    e.stopPropagation()\n  }\n\n  const titlePos = questions.length > 8 ? \"inset-y-1/4\": \"-my-14\";\n\n  function addRightNum() {\n    setRightAnswerNum(rightAnswerNum+1);\n  }\n\n  function addWrongNum() {\n    setWrongAnswerNum(wrongAnswerNum+1);\n  }\n\n  const [gradeFBg, setGradeFBg] = useState();\n\n  function totalRightWrongNum(right, wrong) {\n    setRightAnswerNum(right);\n    setWrongAnswerNum(wrong);\n    setGradeFBg(wrong > right ? \"left\": \"right\");\n  }\n\n  function rightWrongNumReset() {\n    setRightAnswerNum(0);\n    setWrongAnswerNum(0);\n  }\n\n  function redo() {\n    setDone(false);\n  }\n\n  return (\n    <div onMouseMove={() => cursorChangeHandler(!done?cursorSide: gradeFBg)}>\n      {\n        !done&&<MouseLeftRight />\n      }\n      <div className=\"absolute left-10 top-1/2 -my-14 z-30\">\n        <h1 className=\"text-white inset-y-1/2 text-4xl w-36 z-20\">{title} / <span onClick={() => redo()} className=\"text-sm\">Restart</span></h1>\n        <Arrow size=\"40px\" />\n        <SmileSadFace questions={questions} rightAnswerNum={rightAnswerNum} wrongAnswerNum={wrongAnswerNum} />\n      </div>\n        {\n          !done && <QuestionsNotDone questions={questions} index={index} redo={redo} setDone={setDone} addRightNum={addRightNum} addWrongNum={addWrongNum} rightWrongNumReset={rightWrongNumReset}/>\n        }\n        {\n          done && <QuestionsDone questions={questions} index={index} redo={redo} questions={questions} totalRightWrongNum={totalRightWrongNum} rightWrongNumReset={rightWrongNumReset} />\n        }\n      <div onClick={() => {updateCookie(\"hidden\")}} className={`${cookie} onboarding absolute w-full h-full z-10 bg-white flex flex-cols items-center justify-center`}>\n        <FlickHand size=\"200px\" color=\"#fff\" />\n        <span className=\"text-3xl\">Flick right to tell Anni - you like her answer.</span>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { useSpring, useSprings, animated, interpolate } from 'react-spring';\nimport getRandomFromInterval from \"../../getRandomFromInterval\";\n\nexport default function Rect(props) {\n  // define right left and position here with index\n  const randomPos = [\"right-0\", \"left-0\"];\n  const [open, setOpen] = useState(false)\n  const { f, r } = useSpring({ f: open ? 0 : 1, r: open ? -3 : 3 })\n  const bg = [\"var(--red)\", \"var(--yellow)\", \"var(--purple)\", \"var(--green)\", \"var(--orange)\"];\n  const randomValue = getRandomFromInterval(-200, 200);\n  const cards = useSprings(\n    5,\n    [0, 1, 2, 3, 4].map((i) => ({ opacity: 1, x: open? (i/5) *randomValue: 0, y: open? (i/5) *randomValue: 0, z: open ? (i / 5) * 80 : 0, background: bg[i]}))\n  )\n\n  return (\n    <div className={`item-rect absolute ${randomPos[props.index%2]} ${props.color}`} onMouseEnter={() => setOpen(true)} onMouseLeave={() => setOpen(false)}>\n      {cards.map(({ x, y, z, opacity, background }, index) => (\n        <animated.div className=\"absolute\"\n          style={{\n            opacity,\n            background,\n            transform: interpolate(\n              [x, y, z, f.interpolate([0, 0.2, 0.6, 1], [0, index, index, 0]), r],\n              (x, y, z, f, r) => `translate3d(0,${y}px,${z}px) rotateX(${f * r}deg)`\n            )\n          }}>\n          {index === 4 && <animated style={{ transform: f.interpolate([0, 1], ['scale(0.7)', 'scale(1)']) }} />}\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n","export default function RandomBg() {\n\n  const randomBg = [\"equilateral-triangles-bg\",\"triangle-bg\", \"dot-bg\", \"wave-bg\", \"line-bg\", \"box-bg\", \"skew-dot-bg\", \"cross-bg\", \"line-h-bg\",\"paper-bg\", \"diagonal-bg\", \"radial-bg2\",\"rainbow-bg\"]; // do not include radial-bg in not square shape\n  return randomBg[Math.floor(Math.random()*13)]\n\n}\n","import { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport Moon from './shapes/Moon';\nimport Sun from './shapes/Sun';\nimport Sun2 from './shapes/Sun2';\nimport Sun3 from './shapes/Sun3';\nimport Wave from './shapes/Wave';\nimport Square from './shapes/Square';\nimport StraightWave from './shapes/StraightWave';\nimport Rect from './shapes/Rect';\nimport Circle from './shapes/Circle';\nimport { useContext, useState, useEffect } from \"react\";\nimport DotRing from \"./DotRing/DotRing\";\nimport { MouseContext } from \"../context/mouse-context\";\nimport HoverIntent from 'react-hoverintent';\nimport RandomBg from '../RandomBg';\nimport handleViewport from 'react-in-viewport';\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst piePosX = window.innerWidth - 100;\nconst piePosY = window.innerHeight + 50;\nconst trans1 = (x, y) => `translate3d(${-x / 10}px,${y / 10}px,0)`\nconst trans2 = (x, y) => `translate3d(${-x / 8 + 35}px,${y / 8 - 230}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${-y / 6 - 200}px,0)`\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${-y / 3.5}px,0)`\nconst trans5 = (x, y) => `translate3d(${-x / 60}px,${y / 60}px,0)`\nconst trans6 = (x, y) => `translate3d(${piePosX}px,${piePosY}px,0)`\n\n\n\nexport default function Items(props) {\n  const colorPalette =[\"bg-green\", \"bg-pink\", \"bg-purple text-white\", \"bg-yellow\"];\n  // purple with blue rect by using index number\n  const rectPalette = [\"bg-blue\", \"bg-orange\", \"bg-yellow\", \"bg-purple\"];\n  const randomBg = RandomBg();\n  const randomBgArr = [\"triangle-bg\", \"dot-bg\", \"wave-bg\", \"line-bg\", \"box-bg\", \"skew-dot-bg\", \"cross-bg\", \"line-h-bg\",\"paper-bg\", \"diagonal-bg\", \"radial-bg2\"]; // do not include radial-bg in not square shape\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n  const categoryMainShape = [\"large-rect\", \"large-wide-rect\", \"square\", \"hexagon\"];\n  const flexDirection = [\"\", \"flex-row-reverse\"];\n  const textAlign = [\"left\", \"right\"];\n\n  const [mouseover, setMouseover] = useState(\"\");\n  function handleMouseoverChange(newValue) {\n      setMouseover(newValue);\n  }\n  const [props1, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n\n\n  return (\n    <ul onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\n      {\n        props.items && props.items.length>0 && props.items.map((item, index)=><li key={index} value={props.value}  className={`item flex items-center justify-center ${flexDirection[index%2]} ${colorPalette[index%4]}`}>\n\n          <animated.div style={{ transform: props1.xy.interpolate(trans5) }}>\n            <div className={`flex items-center justify-center ${randomBgArr[Math.floor(Math.random()*11)]} ${categoryMainShape[index%4]}`}>\n              <span className={randomBgArr[Math.floor(Math.random()*11)]}></span>\n            </div>\n          </animated.div>\n\n          <animated.div className=\"hover-rotate\" style={{ transform: props1.xy.interpolate(trans2) }}>\n            <Sun2 />\n          </animated.div>\n\n          <Moon background=\"transparent\" />\n          <div className=\"absolute w-full\" style={{\"right\": \"10vw\", \"top\": \"50%\"}}>\n            <animated.div style={{ transform: props1.xy.interpolate(trans1) }}>\n              <Sun />\n            </animated.div>\n\n            <animated.div style={{ transform: props1.xy.interpolate(trans3) }}>\n              <Sun3 />\n            </animated.div>\n          </div>\n\n\n          <Square size=\"150\" color={colorPalette[index%4]} index={index} />\n          <Rect color={rectPalette[index%4]} index={index}/>\n          {\n            /*\n            <Circle />\n            */\n          }\n          <HoverIntent\n            onMouseOver={() => handleMouseoverChange(\"hovered\")}\n            onMouseOut={() => handleMouseoverChange(\"\")}\n            sensitivity={10}\n            interval={200}\n            timeout={0}\n          >\n            <figcaption className={`mx-28 ${textAlign[index%2]}`} style={{maxWidth: \"250px\"}}>\n              <h3 className=\"text-5xl\">{item.cat}</h3>\n              <div className=\"my-3\">{item.catFigcaption}</div>\n              <button onMouseEnter={() => cursorChangeHandler(\"hovered\")}\n            onMouseLeave={() => cursorChangeHandler(\"\")} className=\"text-left border rounded-sm py-3 px-6\"><Link to={`/questions/${index+1}`}> View Questions</Link></button>\n            </figcaption>\n          </HoverIntent>\n\n        </li>)\n      }\n    </ul>\n  )\n}\n","export default function Footer() {\n  return (\n    <footer>\n      <ul className=\"relative\" style={{\"width\": \"200px\", \"margin\": \"0 auto\", \"top\": \"-80px\"}}>\n        <li className=\"my-2\"><a href=\"/report\">See Interview Report</a></li>\n        <li className=\"my-2\"><a href=\"/credit\">Github</a></li>\n        <li className=\"my-2\"><a href=\"/questions\">About Me</a></li>\n        <li className=\"my-2\"><a href=\"/credit\">Credit</a></li>\n      </ul>\n    </footer>\n  )\n}\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { MouseContext } from \"./context/mouse-context\";\nimport HomeHead from './components/HomeHead';\nimport Questions from './pages/Questions';\nimport Items from './components/Items';\nimport Footer from './components/Footer';\nimport DotRing from \"./components/DotRing/DotRing\";\nimport Arrow from \"./components/shapes/Arrow\";\nimport RandomBg from './RandomBg';\nimport getRandomDifferent from './getRandomDifferent';\n\nfunction Home() {\n  const [open, setOpen] = useState(false);\n  const randomBg = RandomBg();\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n\n  const openQuestions = () => {\n    return setOpen(true);\n  }\n  const closeQuestions = () => {\n    return setOpen(false);\n  }\n\n  const releaseBodyScrolling = () => {\n    document.body.classList.remove('list-open');\n  }\n\n  const lockBodyScrolling = () => {\n    document.body.classList.add('list-open');\n  }\n\n  const [items,setItems]=useState([]);\n  const [jsonLoaded, setJsonLoaded] = useState(false);\n\n  const getItems=(file)=>{\n    fetch(file\n    ,{\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        return response.json();\n      })\n      .then(function(myJson) {\n        setItems(myJson);\n        setJsonLoaded(true);\n      });\n  }\n  // get json file\n  useEffect(()=>{\n    getItems('basic.json')\n  },[])\n\n  // deal with category here\n  const [category,setCategory]= useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const [categoryIndex, setCategoryIndex] = useState();\n  const [categoryQuestions, setCategoryQuestions] = useState([]);\n  const [categoryTitle, setCategoryTitle] = useState();\n\n  function handleCategoryChange(newCategory, index) {\n      setCategory(newCategory);\n      setAnswers(JSON.parse(localStorage.getItem('category'+index)));\n      setCategoryIndex(index);\n      setCategoryQuestions(items[index].questions);\n      setCategoryTitle(items[index].cat);\n  }\n\n  const xBg = RandomBg();\n\n  const [bg, setBg] = useState(\"dot-bg\");\n  const bgArr = [\"honey-comb-bg\", \"pie-bg\", \"equilateral-triangles-bg\",\"rect-bg\", \"triangle-bg\", \"wave-bg\", \"line-bg\", \"box-bg\", \"skew-dot-bg\", \"cross-bg\", \"line-h-bg\",\"paper-bg\", \"diagonal-bg\"];\n\n  const history = useHistory();\n\n  function handleRandomBg(newBg) {\n    setBg(getRandomDifferent(bgArr, bg));\n  }\n\n  useEffect(()=> {\n    document.body.classList.remove('questions-page');\n  }, []);\n\n  return (\n    <div>\n      {\n        <DotRing />\n      }\n      <HomeHead getCategories={getItems} />\n      <Items items={items} value={category} handleCategoryChange={handleCategoryChange} openQuestions={openQuestions} lockBodyScrolling={lockBodyScrolling} handleRandomBg={handleRandomBg} open={open}/>\n      <Footer />\n      <div onClick={()=>handleRandomBg(xBg)} className={`static ${cursorType == \"left\" ? \"red-main-color\": \"\"} ${bg}`} open={open}>\n        <span className=\"close\" onClick={()=> {closeQuestions(); releaseBodyScrolling();}}>\n          {open&&<Arrow size=\"100px\" rotate=\"180deg\"/>}\n        </span>\n        {\n          open && setJsonLoaded && items.length > 0 ? <Questions data={items} questions={categoryQuestions} title={categoryTitle} category={category} categoryIndex={categoryIndex} answers={answers} />: null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import \"./Report.scss\";\nimport Logo from \"./components/Logo\";\nimport { useSpring, animated } from 'react-spring';\n\nfunction Report() {\n  const fadeIn = useSpring({ to: { y: 0, opacity: 1}, from: { opacity: 0, y:1000 } });\n  return (\n    <div className=\"report\">\n      <div className=\"absolute z-30\" style={{\"left\": 0, \"top\": 0, \"width\": \"200px\"}}>\n        <Logo color=\"var(--blue)\" />\n      </div>\n      <animated.div style={fadeIn}>\n        <iframe src=\"https://react-calendso-interview-production.up.railway.app/anni/30mins\" frameborder=\"0\" allowfullscreen></iframe>\n      </animated.div>\n    </div>\n\n  );\n}\n\nexport default Report;\n","function Credit() {\n  return (\n    <div className=\"flex items-center justify-center p-10\">\n      <ul>\n        <li>Credit: http://projects.verou.me/css3patterns/#honeycomb</li>\n      </ul>\n    </div>\n\n  );\n}\n\nexport default Credit;\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { MouseContext } from \"../context/mouse-context\";\nimport useMousePosition from \"../hooks/useMousePosition\";\nimport Questions from './Questions';\nimport Arrow from '../components/shapes/Arrow';\nimport getRandomDifferent from '../getRandomDifferent';\nimport MouseLeftRight from \"../components/DotRing/MouseLeftRight\";\nimport Logo from \"../components/Logo\";\n\nexport default function QuestionsMock() {\n  const categoryIndex = useParams().categoryIndex;\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const [answers, setAnswers] = useState([]);\n  const { cursorType, cursorChangeHandler } = useContext(MouseContext);\n  const { x, y } = useMousePosition();\n  const cursorSide = x > window.innerWidth / 2 ? \"right\" : \"left\";\n  const pathname = useHistory().location.pathname.match(/.*\\/([^/]+)\\/[^/]+/)[1] || \"\";\n\n  useEffect(() => {\n    fetch(`${categoryIndex}.json`, {})\n      .then((res) => res.json())\n      .then((response) => {\n        setData(response);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, [categoryIndex]);\n\n  useEffect(() => {\n    if (pathname == 'questions') {\n      document.body.classList.add('questions-page');\n    }\n  })\n\n  useEffect(() => {\n    setBg(getRandomDifferent(bgArr, bg));\n  }, [data])\n\n  useEffect(()=> {\n    setAnswers(JSON.parse(localStorage.getItem('category'+categoryIndex)));\n  }, []);\n\n  const [bg, setBg] = useState(\"dot-bg\");\n  const bgArr = [\"honey-comb-bg\", \"pie-bg\", \"equilateral-triangles-bg\",\"rect-bg\", \"triangle-bg\", \"wave-bg\", \"line-bg\", \"box-bg\", \"skew-dot-bg\", \"cross-bg\", \"line-h-bg\",\"paper-bg\", \"diagonal-bg\"];\n  const history = useHistory();\n\n  function handleRandomBg() {\n    setBg(getRandomDifferent(bgArr, bg));\n  }\n\n  return (\n    <div onClick={()=>handleRandomBg()} className={`static2 ${cursorType == \"left\" ? \"red-main-color\": \"\"} ${bg}`}>\n      <div className=\"text-sm\">\n        <Logo color=\"#fff\" bg=\"black\" />\n      </div>\n      <span onClick={()=>history.goBack()}className=\"close absolute top-6\tright-10 z-30\">\n        <Arrow size=\"100px\" rotate=\"180deg\"/>\n      </span>\n      {\n        data && data.questions.length !=0 && <Questions categoryQuestions={data.questions} categoryTitle={data.title} categoryIndex={categoryIndex} answers={answers || []} />\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './Home';\nimport Report from './Report';\nimport Credit from './Credit';\nimport QuestionsMock from './pages/QuestionsMock';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/questions/:categoryIndex' component={QuestionsMock} />\n          <Route path='/credit' component={Credit} />\n          <Route path='/report' component={Report} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MouseContextProvider from \"./context/mouse-context\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <MouseContextProvider>\n        <App />\n      </MouseContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}